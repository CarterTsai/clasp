printf "\n\nInvoking .gdbinit\n"

set confirm off
set print elements 0

printf "Defining break for core::gdb_hook\n"
set breakpoint pending on
break dbg_hook
break __asan_report_error

printf "Defining lisp commands for printing shared_ptr objects\n"

define lhelp
    printf "lod {obj}            - describe a lisp object\n"
    printf "lapropos {name}      - search for symbols\n"
    printf "lback                - print the lisp backtrace\n"
    printf "led {env}            - dump the environment\n"
    printf "ltrace {names_str}   - turn on trace of function\n"
    printf "                       functions are given as list of function names\n"
    printf "                       empty-string will print all traced function names\n"
    printf "luntrace {names_str} - turn on trace of function\n"
    printf "                       functions are given as list of function names\n"
    printf "                       empty-string will untrace all functions\n"
    printf "lret                 - dump the global multiple-value return list\n"
end


define lret
  call core::global_MultipleReturnValues->dump()
end

# Print the classname of the object
define lclassname
  print ($arg0.px->_Class->_Name.px->_Name._M_dataplus._M_p)
end

# Print the name of a core::Function_sp ptr
define lfunction
  print ($arg0.px->_WeakSymbol.px->_Name._M_dataplus._M_p)
end



define ltrace
  call _lisp->gdb_trace_by_name($arg0)
end

define luntrace
  call _lisp->gdb_untrace_by_name($arg0)
end

define lod
  call core::af_print($arg0)
end

document lod
"call OBJ.px->describe()"
end


defin ldbg
    call (void)af_invokeInternalDebuggerFromGdb()
end

document ldbg
  "Enter the debugger"
end

define lapropos
    call _lisp->dump_apropos($arg0)
end
document lapropos
 "apropos of symbol names"
end

define lback 
  if $argc == 0
    call _lisp->dump_backtrace(50)
  end
  if $argc == 1
    call _lisp->dump_backtrace($arg0)
  end
end
document lback
 "Dump a backtrace of the lisp code stack.
  Usage: lback [number-of-columns def=50]"
end

define led
  call $arg0.px->dump()
end

document led
 "Dump an environment --> "
end


define lsi
  call dumpSourceInfo($arg0)
end


