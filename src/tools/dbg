#!/usr/bin/env python

import os
import sys
import getopt



try:
    opts,args = getopt.getopt(sys.argv[1:],"pcs:h")
except getopt.GetoptError:
    print "Error parsing arguments"
    sys.exit(1)
print("args = %s"%str(args))
debugAllCSource = True
specificSourceFiles = ""
pidPause = True
for o,a in opts:
    if ( o == "-p" ):
        pidPause = False
    elif ( o == "-s" ):
	debugAllCSource = False
	specificSourceFiles += "%s "%a
    elif ( o == "-c" ):
	debugAllCSource = False
    elif ( o == "-h" ):
        print("Options:")
	print("  -c   Turn OFF global C++ source logging")
	print("  -s fileName   Turn OFF global C++ source logging and add a specific source file to debug")
	print("  -p   Turn OFF pid printing and pausing")
	print("  -h   Print help")


if ( pidPause ):
    print "Pid = %d: press enter: "%os.getpid(); sys.stdin.readline()

if ( debugAllCSource ):
    print("export CANDO_DEBUG to focus debugging")
    if ( not "CANDO_DEBUG" in os.environ ):
	os.environ["CANDO_DEBUG"] = "ALL"
    print("Running command with CANDO_DEBUG=%s"%os.environ["CANDO_DEBUG"])
else:
    if ( specificSourceFiles != "" ):
	if ( not "CANDO_DEBUG" in os.environ ):
	    os.environ["CANDO_DEBUG"] = specificSourceFiles
	print("Running command with CANDO_DEBUG=%s"%os.environ["CANDO_DEBUG"])
        

targetExec = args[0]
if ( not os.path.exists(targetExec) ):
    if ( not "CANDO_SCRIPTS" in os.environ ):
        print("You must define the CANDO_SCRIPTS directory in your environment")
	sys.exit(0)
    targetExec = os.environ["CANDO_SCRIPTS"]+"/"+targetExec
    if ( not os.path.exists(targetExec) ):
        print("The target executable doesn't exist: %s"%targetExec)


if ( targetExec[-5:] == "cando" ):
    cmd = targetExec
else:
    cmd="python "+targetExec


for arg in args[1:]:
    cmd = cmd + " " + arg

print("Running command: %s"%cmd)
os.system(cmd)
