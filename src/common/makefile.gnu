#############################################################################
# Makefile for building cando
# Generated by tmake at 12:18, 2004/05/11
#     Project: cando 
#    Template: lib
#############################################################################

####### Compiler, tools and options

#
# Debugging
#
#ifeq ($(COMPILE_TYPE),debug)
#	CXXFLAGS=	-w -pipe -g -ggdb -fPIC -DUSEBOOSTPYTHON -DEXPAT
#endif
#
#
# Profiling  doesn't work this way,  we've got to get oprofile to work
#
#CXXFLAGS=	-g -pg -pipe -fPIC -DUSEBOOSTPYTHON -DEXPAT
#LFLAGS=	-pg
#
# Optimize
#
#ifeq ($(COMPILE_TYPE),optimize)
#	CXXFLAGS=	-O3 -pipe -fPIC -DUSEBOOSTPYTHON -DEXPAT
#endif
#
#ifeq ($(COMPILE_TYPE),optasm)
#	CXXFLAGS=	-O3 -S -pipe -fPIC -DUSEBOOSTPYTHON -DEXPAT
#endif
#
#
# Preprocessor output
#
#ifeq ($(COMPILE_TYPE), preprocessOnly)
#	CXXFLAGS=-E -C -DUSEBOOSTPYTHON -DEXPAT
#endif
#


CC	=	gcc
CXX	=	g++
CFLAGS	=	-pipe -g -fPIC -DUSEBOOSTPYTHON -DEXPAT
INCPATH	=	$(EXTERNAL_INCLUDES) -I$(SOURCE_DIR)
LINK	=	g++
LFLAGS	+=	$(LINKING_FLAGS)
LIBS	=	$(EXTERNAL_LIBS)
AR	=	ar cqs
RANLIB	=	
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f


vpath %.h ../
vpath %.cc ../




include	../makefile.files


OBJECTS = $(SOURCES:.cc=.o)

include $(CANDO_HOME)/makefile.inc



TARGETSO=	$(TARGET).so
TARGETDYLIB=	$(TARGET).dylib
TARGETDLL=	$(TARGET).dll


TARGETD	=	$(TARGET).1.0.0
TARGET0	=	$(TARGET).1.0.0
TARGET1	=	$(TARGET).1
TARGET2	=	$(TARGET).1.0
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<



%.d:	%.cc
	set -e; rm -f $@; \
	$(CXX) -MM $(CXXFLAGS) $(INCPATH) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$


####### Build rules




embedInPython: CXXFLAGS += -DEMBED
embedInPython: $(OBJECTS)
	../embedScript "$(EXTERNAL_LIBS)" > $(PYTHON_EMBED_TOP)/Modules/Setup.local
	make -C $(PYTHON_EMBED_TOP)/Modules Makefile
	make -C $(PYTHON_EMBED_TOP) install



libraryClean:
	-rm -f lib*


-include	$(SOURCES:.cc=.d)
