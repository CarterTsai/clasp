
(defun accessors (sout class slot)
  (format sout "#ifdef ACCESSOR_IMPLEMENTATION~%")
  (format sout "SYMBOL_EXPORT_SC_(~a);~%" slot)
  (format sout "#define LOCK_af_~a_~a 1~%" class slot)
  (format sout "#define DOCS_af_~a_~a \"get accessor for ~a-~a\"~%" class slot class slot)
  (format sout "#define ARGS_af_~a_~a \"(obj)\"~%" class slot)
  (format sout "#define DECL_af_~a_~a \"\"~%" class slot)
  (format sout "ARGUMENT_SC_(obj);~%")
  (format sout "core::T_sp af_~a_~a(core::T_sp obj)~%" class slot)
  (format sout "{_G();~%")
  (format sout "    core::T_sp result = eval::apply(_sym_slot_value,(ql::list(_lisp) << obj << _lisp->symbol(_sym_~a) ),_lisp);~%" slot)
  (format sout "    return( Values(result));~%")
  (format sout "};~%")
  (format sout "#define LOCK_af_~a_~a 1~%" class slot)
  (format sout "#define DOCS_af_setf_~a_~a \"setf accessor for ~a-~a\"~%" class slot class slot)
  (format sout "#define ARGS_af_setf_~a_~a \"(new_value obj)\"~%" class slot)
  (format sout "#define DECL_af_setf_~a_~a \"\"~%" class slot)
  (format sout "T_sp af_setf_~a_~a(core::T_sp new_value, core::T_sp obj)~%" class slot)
  (format sout "{_G();~%")
  (format sout "    T_sp result = macros::setf(_sym_~a,obj,new_value,_lisp);~%" slot)
  (format sout "    return( Values(result));~%")
  (format sout "};~%")
  (format sout "#endif~%")
  (format sout "#ifdef ACCESSORS_DEFINITION~%")
  (format sout "DEFACCESSORS_EXPORT(~a_~a);~%" class slot)
  (format sout "#endif // ACCESSORS_DEFINITION~%")
)
  

(with-open-file (fout (si:argv 3) :direction :output :if-exists :supersede)
  (accessors fout "class" "name")
  (accessors fout "class" "direct_superclasses")
  (accessors fout "class" "direct_slots")
  (accessors fout "class" "precedence_list")
  (accessors fout "class" "slots")
  (accessors fout "class" "direct_subclasses")
  (accessors fout "class" "direct_methods")

  (accessors fout "generic_function" "method_class")
  (accessors fout "generic_function" "name")
  (accessors fout "generic_function" "lambda_list")
  (accessors fout "generic_function" "methods")
  (accessors fout "generic_function" "discriminating_function")

  (accessors fout "method" "lambda_list")
  (accessors fout "method" "qualifiers")
  (accessors fout "method" "specializers")
  (accessors fout "method" "body")
  (accessors fout "method" "environment")
  (accessors fout "method" "generic_function")
  (accessors fout "method" "function")

  (accessors fout "slot_definition" "name")
  (accessors fout "slot_definition" "init_function")
  (accessors fout "slot_definition" "initform")
  (accessors fout "slot_definition" "initargs")
  (accessors fout "slot_definition" "readers")
  (accessors fout "slot_definition" "writers")
  (accessors fout "slot_definition" "allocation")
)
