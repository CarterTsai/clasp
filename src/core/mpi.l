					; fixed code
(defClass Rectangle () ( _width _height )
  (method init (self w h )
	  (setq (slot self _width) w )
	  (setq (slot self _height) h ))
  (method repr (self )
	  (% "Rectangle[w:%lf h:%lf]" _width _height ))
  (method area (self )
	  (* (slot self _width) (slot self _height) )))

(defvar *mpi* (mpiCommWorld))
(defvar *rank* (mpiRank))
(defvar *size* (mpiSize))

(if (mpiEnabled )
    (progn 
      (print (% "Process with MPI rank %d started" rank ))
      (if (== rank 0 )
	  (progn
	    (print (% "I'm the manager, waiting for %d objects" size ))
	    (foreach cnt (Range 0 *size*)
		     (let ((msg (Recv *mpi* MPI.ANY_SOURCE MPI.ANY_TAG )))
		       (:= source (GetSource *mpi* ))
		       (print (% "Master received message from source: %d" source ))
		       (print (% "      Received Rectangle: %s" (repr msg )))
		       (setq cnt (+ cnt 1 ))))    
	    (println "Master done" ))
	(progn
	  (println "Worker seeding random number generator" )
	  (seedRandomNumberGenerators (mpiRank ))
	  (let ( (rect (Rectangle (* (randomNumber01) 100.0) (* (randomNumber01) 100.0))))
	    (println (% "Client rank: %d Rectangle: %s" (mpiRank )(repr rect )))
	    (Send *mpi* rect 0 0 )
	    ))))
  (println "Not running mpi" ))