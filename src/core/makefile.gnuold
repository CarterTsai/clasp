#############################################################################
# Makefile for building libmbbCxx.so.1.0.0
# Generated by tmake at 12:18, 2004/05/11
#     Project: mbbCxx
#    Template: lib
#############################################################################

####### Compiler, tools and options are now set in makefile.inc


CC	=	gcc
CXX	=	g++
INCPATH	=	$(EXTERNAL_INCLUDES)
LINK	=	g++
LFLAGS	+=	$(SHARED_FLAGS)
LIBS	=	$(EXTERNAL_LIBS)
AR	=	ar cqs
RANLIB	=	
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f


vpath %.h ../
vpath %.cc ../


include	makefile.files


OBJECTS = $(SOURCES:.cc=.o)

INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	
OBJMOC	=	
DIST	=	
TARGET	=	libmbbCxx.so.1.0.0
TARGETA	=	libmbbCxx.a
TARGETD	=	libmbbCxx.so.1.0.0
TARGET0	=	libmbbCxx.so
TARGET1	=	libmbbCxx.so.1
TARGET2	=	libmbbCxx.so.1.0
INTERFACE_DECL_PATH = .
CXXFLAGS += -Wreturn-type


####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<



%.d:	%.cc
	set -e; rm -f $@; \
	$(CXX) -MM $(CXXFLAGS) $(INCPATH) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$


####### Build rules




all: $(mbbCxx_TARGET)


cando:	cando.o $(OBJECTS)
	echo "Making cando"
	$(LINK) $(LFLAGS) -o cando $(OBJECTS) cando.o $(LIBS)


dynamicLib:	$(TARGET)

staticLib:	$(TARGETA)


embedInPython: CXXFLAGS += -DEMBED
embedInPython: $(OBJECTS) $(OBJMOC)
	../embedScript "$(EXTERNAL_LIBS)" > $(PYTHON_EMBED_TOP)/Modules/Setup.local
	make -C $(PYTHON_EMBED_TOP)/Modules Makefile
	make -C $(PYTHON_EMBED_TOP) install


$(TARGET): $(OBJECTS) $(OBJMOC)
	-rm -f $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGETD) $(OBJECTS) $(OBJMOC) $(LIBS)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)

staticlib: $(TARGETA)

$(TARGETA): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	-rm -f $(TARGETA)
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

moc: $(SRCMOC)


#dist:
#	$(TAR) mbbCore.tar mbbCore.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
#	$(GZIP) mbbCore.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-rm -f *~ core




####### Sub-libraries


###### Combined headers


-include	$(SOURCES:.cc=.d)
