
Searching for poly-cyclomers.

Idea: Use a generate/test strategy.

Idea: Tests should be able to be written in eather Python for flexibility or
	C++ for speed.

Question: Do we generate poly-cyclomer structures in C++ for speed?
Thought: We might be able to do it fast enough from Python if in Python 
	we generate an array of strings representing poly-cyclomers and 
	then in C++ generate the corresponding structure.


Idea:	I'd like to be able to define groups of cyclomers and assemble them 
	as groups.  This could be a feature that would be added later.
	Example:  If we found a fragment that made a great binding site for
	a metal atom.  I'd like to be able to search for sequences that can 
	bracket that fragment.
Idea:	The best way to implement this is to be able to create entries in the
	CyclomerDatabase on the fly.  This would be useful anyway because then
	we could build CyclomerDatabase's on the fly and write them back out
	to a file.

Idea:	Write some tests in C++ for speed.  Like a bump check to eliminate
	poly-cyclomers that overlap themselves.

Idea:	Write C++ routines to manipulate structures, like an energy minimizer 
	and torsional drivers?
