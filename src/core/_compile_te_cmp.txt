; ++++++++++++++++++++  ----- In package: #<CORE>
; compile-file compiling: ( LET* ( ( %DOLIST-VAR ( QUOTE ( A B ) ) ) ) ( TAGBODY ( GO G3918 ) G3917 ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil ) ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) ) G3918 ( IF %DOLIST-VAR ( GO G3917 ) ) ) )
compile-file.lsp::t1expr>> Compiling top-level expression: ( LET* ( ( %DOLIST-VAR ( QUOTE ( A B ) ) ) ) ( TAGBODY ( GO G3918 ) G3917 ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil ) ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) ) G3918 ( IF %DOLIST-VAR ( GO G3917 ) ) ) )
Creating repl function with name: repl
codegen ( LET* ( ( %DOLIST-VAR ( QUOTE ( A B ) ) ) ) ( TAGBODY ( GO G3918 ) G3917 ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil ) ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) ) G3918 ( IF %DOLIST-VAR ( GO G3917 ) ) ) )
About to codegen special-operator or application for: ( LET* ( ( %DOLIST-VAR ( QUOTE ( A B ) ) ) ) ( TAGBODY ( GO G3918 ) G3917 ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil ) ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) ) G3918 ( IF %DOLIST-VAR ( GO G3917 ) ) ) )
About to create lambda-list-handler
Returning non-nil renv
Returning non-nil renv
Returning nil renv: #<LLVM-SYS::CALL-INST   %0 = call %ActivationFrame_sp.54* @activationFrameNil(), !dbg !0>
About to generate code for exps: (( QUOTE ( A B ) )  )
codegen ( QUOTE ( A B ) )
About to codegen special-operator or application for: ( QUOTE ( A B ) )
Returning non-nil renv
About to evaluate codegen-progn
codegen ( TAGBODY ( GO G3918 ) G3917 ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil ) ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) ) G3918 ( IF %DOLIST-VAR ( GO G3917 ) ) )
About to codegen special-operator or application for: ( TAGBODY ( GO G3918 ) G3917 ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil ) ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) ) G3918 ( IF %DOLIST-VAR ( GO G3917 ) ) )
codegen ( GO G3918 )
About to codegen special-operator or application for: ( GO G3918 )
codegen ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil )
About to codegen special-operator or application for: ( LET ( ( INNER ( QUOTE ( 1 2 3 ) ) ) ) ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) ) nil )
About to create lambda-list-handler
Returning non-nil renv
Returning non-nil renv
Returning non-nil renv
About to generate code for exps: (( QUOTE ( 1 2 3 ) )  )
codegen ( QUOTE ( 1 2 3 ) )
About to codegen special-operator or application for: ( QUOTE ( 1 2 3 ) )
Returning non-nil renv
About to evaluate codegen-progn
codegen ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) )
About to codegen special-operator or application for: ( TAGBODY ( GO G4291 ) G4290 ( SETQ INNER ( REST INNER ) ) G4291 ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) ) )
codegen ( GO G4291 )
About to codegen special-operator or application for: ( GO G4291 )
codegen ( SETQ INNER ( REST INNER ) )
About to codegen special-operator or application for: ( SETQ INNER ( REST INNER ) )
Compiling setq for target[INNER]
Returning non-nil renv
codegen ( REST INNER )
About to codegen special-operator or application for: ( REST INNER )
Returning non-nil renv
Returning non-nil renv
Returning non-nil renv
About to generate code for exps: ( INNER )
codegen INNER
About to codegen-var-lookup for INNER
Returning non-nil renv
About to call lexicalValueRead depth-index[(0 0  )] depth[0] index[0]
Returning non-nil renv
codegen ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) )
About to codegen special-operator or application for: ( IF ( NOT ( NULL INNER ) ) ( PROGN ( GO G4290 ) ) )
codegen ( NOT ( NULL INNER ) )
About to codegen special-operator or application for: ( NOT ( NULL INNER ) )
Returning non-nil renv
Returning non-nil renv
Returning non-nil renv
About to generate code for exps: ( ( NULL INNER ) )
codegen ( NULL INNER )
About to codegen special-operator or application for: ( NULL INNER )
Returning non-nil renv
Returning non-nil renv
Returning non-nil renv
About to generate code for exps: ( INNER )
codegen INNER
About to codegen-var-lookup for INNER
Returning non-nil renv
About to call lexicalValueRead depth-index[(0 0  )] depth[0] index[0]
Returning non-nil renv
Returning non-nil renv
codegen ( PROGN ( GO G4290 ) )
About to codegen special-operator or application for: ( PROGN ( GO G4290 ) )
codegen ( GO G4290 )
About to codegen special-operator or application for: ( GO G4290 )
codegen nil
codegen-nil
codegen-nil
codegen nil
codegen-nil
codegen ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) )
About to codegen special-operator or application for: ( SETQ %DOLIST-VAR ( CDR %DOLIST-VAR ) )
Compiling setq for target[%DOLIST-VAR]
Returning non-nil renv
codegen ( CDR %DOLIST-VAR )
About to codegen special-operator or application for: ( CDR %DOLIST-VAR )
Returning non-nil renv
Returning non-nil renv
Returning non-nil renv
About to generate code for exps: ( %DOLIST-VAR )
codegen %DOLIST-VAR
About to codegen-var-lookup for %DOLIST-VAR
Returning non-nil renv
About to call lexicalValueRead depth-index[(0 0  )] depth[0] index[0]
Returning non-nil renv
codegen ( IF %DOLIST-VAR ( GO G3917 ) )
About to codegen special-operator or application for: ( IF %DOLIST-VAR ( GO G3917 ) )
codegen %DOLIST-VAR
About to codegen-var-lookup for %DOLIST-VAR
Returning non-nil renv
About to call lexicalValueRead depth-index[(0 0  )] depth[0] index[0]
codegen ( GO G3917 )
About to codegen special-operator or application for: ( GO G3917 )
codegen nil
codegen-nil
codegen-nil
About to cleanup local-metadata :cleanup --> ((COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %if-cond-tsp50 = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args39 = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args17 = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args14 = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %if-cond-tsp = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-obj4 = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-val3 = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %LET = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-obj = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-val = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %"LET*" = alloca %ActivationFrame_sp.54, !dbg !0>  )  )
About to cleanup local-metadata :cleanup --> ((COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %if-cond-tsp50 = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args39 = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args17 = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args14 = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %if-cond-tsp = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %call-args = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-obj4 = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-val3 = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %LET = alloca %ActivationFrame_sp.54, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-obj = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTTSP #<LLVM-SYS::ALLOCA-INST   %temp-val = alloca %T_sp.50, !dbg !0>  ) (COMPILER::DESTRUCTAFSP #<LLVM-SYS::ALLOCA-INST   %"LET*" = alloca %ActivationFrame_sp.54, !dbg !0>  )  )
Dumping the module contained repl function

define void @repl(%T_sp.50* %result-ptr, %ActivationFrame_sp.54* %activation-frame-ptr) {
entry:
  %exn.slot = alloca i8*, !dbg !0
  %ehselector.slot = alloca i32, !dbg !0
  %"LET*" = alloca %ActivationFrame_sp.54, !dbg !0
  %temp-val = alloca %T_sp.50, !dbg !0
  %temp-obj = alloca %T_sp.50, !dbg !0
  %LET = alloca %ActivationFrame_sp.54, !dbg !0
  %temp-val3 = alloca %T_sp.50, !dbg !0
  %temp-obj4 = alloca %T_sp.50, !dbg !0
  %call-args = alloca %ActivationFrame_sp.54, !dbg !0
  %if-cond-tsp = alloca %T_sp.50, !dbg !0
  %call-args14 = alloca %ActivationFrame_sp.54, !dbg !0
  %call-args17 = alloca %ActivationFrame_sp.54, !dbg !0
  %call-args39 = alloca %ActivationFrame_sp.54, !dbg !0
  %if-cond-tsp50 = alloca %T_sp.50, !dbg !0
  %":::alloca-end" = alloca i32, i32 0, !dbg !0
  call void @newAFsp(%ActivationFrame_sp.54* %"LET*"), !dbg !0
  call void @newTsp(%T_sp.50* %temp-val), !dbg !0
  call void @newTsp(%T_sp.50* %temp-obj), !dbg !0
  call void @newAFsp(%ActivationFrame_sp.54* %LET), !dbg !0
  call void @newTsp(%T_sp.50* %temp-val3), !dbg !0
  call void @newTsp(%T_sp.50* %temp-obj4), !dbg !0
  call void @newAFsp(%ActivationFrame_sp.54* %call-args), !dbg !0
  call void @newTsp(%T_sp.50* %if-cond-tsp), !dbg !0
  call void @newAFsp(%ActivationFrame_sp.54* %call-args14), !dbg !0
  call void @newAFsp(%ActivationFrame_sp.54* %call-args17), !dbg !0
  call void @newAFsp(%ActivationFrame_sp.54* %call-args39), !dbg !0
  call void @newTsp(%T_sp.50* %if-cond-tsp50), !dbg !0
  %":::new-end" = alloca i32, i32 0, !dbg !0
  %":::setup-end" = alloca i32, i32 0, !dbg !0
  %"trace-LET*" = call i32 @trace_enterLetSTARScope(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 1, i32 2, %ActivationFrame_sp.54* %"LET*"), !dbg !0
  %0 = call %ActivationFrame_sp.54* @activationFrameNil(), !dbg !0
  call void @makeValueFrame(%ActivationFrame_sp.54* %"LET*", i32 1, %ActivationFrame_sp.54* %0), !dbg !0
  call void @makeNil(%T_sp.50* %temp-val), !dbg !0
  invoke void @internSymbol(%T_sp.50* %temp-obj, i8* getelementptr inbounds ([2 x i8]* @":::symbol-name-B", i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @":::package-name-CORE", i32 0, i32 0))
          to label %normal-dest unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest:                                      ; preds = %entry
  call void @makeCons(%T_sp.50* %temp-val, %T_sp.50* %temp-obj, %T_sp.50* %temp-val), !dbg !0
  invoke void @internSymbol(%T_sp.50* %temp-obj, i8* getelementptr inbounds ([2 x i8]* @":::symbol-name-A", i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @":::package-name-CORE", i32 0, i32 0))
          to label %normal-dest1 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest1:                                     ; preds = %normal-dest
  call void @makeCons(%T_sp.50* %temp-val, %T_sp.50* %temp-obj, %T_sp.50* %temp-val), !dbg !0
  call void @firstValueIfMultipleValue(%T_sp.50* %temp-val), !dbg !0
  %dest-frame-0 = invoke %T_sp.50* @valueFrameReference(%ActivationFrame_sp.54* %"LET*", i32 0)
          to label %normal-dest2 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest2:                                     ; preds = %normal-dest1
  call void @copyTsp(%T_sp.50* %temp-val, %T_sp.50* %dest-frame-0), !dbg !0
  br label %tagbody-G3918, !dbg !0

tagbody-G3918:                                    ; preds = %normal-dest2
  br label %tagbody-G391849, !dbg !0

remainder:                                        ; No predecessors!
  br label %tagbody-G3917, !dbg !0

tagbody-G3917:                                    ; preds = %then54, %remainder
  %trace-LET = call i32 @trace_enterLetScope(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 5, i32 7, %ActivationFrame_sp.54* %LET), !dbg !0
  call void @makeValueFrame(%ActivationFrame_sp.54* %LET, i32 1, %ActivationFrame_sp.54* %"LET*"), !dbg !0
  call void @makeNil(%T_sp.50* %temp-val3), !dbg !0
  call void @makeFixnum(%T_sp.50* %temp-obj4, i32 3), !dbg !0
  call void @makeCons(%T_sp.50* %temp-val3, %T_sp.50* %temp-obj4, %T_sp.50* %temp-val3), !dbg !0
  call void @makeFixnum(%T_sp.50* %temp-obj4, i32 2), !dbg !0
  call void @makeCons(%T_sp.50* %temp-val3, %T_sp.50* %temp-obj4, %T_sp.50* %temp-val3), !dbg !0
  call void @makeFixnum(%T_sp.50* %temp-obj4, i32 1), !dbg !0
  call void @makeCons(%T_sp.50* %temp-val3, %T_sp.50* %temp-obj4, %T_sp.50* %temp-val3), !dbg !0
  call void @firstValueIfMultipleValue(%T_sp.50* %temp-val3), !dbg !0
  %dest-frame-05 = invoke %T_sp.50* @valueFrameReference(%ActivationFrame_sp.54* %LET, i32 0)
          to label %normal-dest6 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest6:                                     ; preds = %tagbody-G3917
  call void @copyTsp(%T_sp.50* %temp-val3, %T_sp.50* %dest-frame-05), !dbg !0
  br label %tagbody-G3919, !dbg !0

tagbody-G3919:                                    ; preds = %normal-dest6
  br label %tagbody-G4291, !dbg !0

remainder7:                                       ; No predecessors!
  br label %tagbody-G4290, !dbg !0

tagbody-G4290:                                    ; preds = %then, %remainder7
  %1 = invoke %T_sp.50* @lexicalValueReference(i32 0, i32 0, %ActivationFrame_sp.54* %LET)
          to label %normal-dest8 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest8:                                     ; preds = %tagbody-G4290
  %trace-call = call i32 @trace_enterCallScope(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 11, i32 17, %ActivationFrame_sp.54* %call-args), !dbg !0
  call void @makeValueFrame(%ActivationFrame_sp.54* %call-args, i32 1, %ActivationFrame_sp.54* %LET), !dbg !0
  %call-args-ref-0 = invoke %T_sp.50* @valueFrameReference(%ActivationFrame_sp.54* %call-args, i32 0)
          to label %normal-dest9 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest9:                                     ; preds = %normal-dest8
  invoke void @lexicalValueRead(%T_sp.50* %call-args-ref-0, i32 0, i32 0, %ActivationFrame_sp.54* %LET)
          to label %normal-dest10 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest10:                                    ; preds = %normal-dest9
  call void @firstValueIfMultipleValue(%T_sp.50* %call-args-ref-0), !dbg !0
  invoke void @invokePossibleMultipleValueSymbolFunction(%T_sp.50* %1, %Sym_sp.52* @"CORE:REST", %ActivationFrame_sp.54* %call-args)
          to label %normal-dest11 unwind label %call-unwind-landing-pad, !dbg !0

normal-dest11:                                    ; preds = %normal-dest10
  br label %call-cont-block, !dbg !0

call-unwind-landing-pad:                          ; preds = %normal-dest12, %call-unwind-landing-pad, %normal-dest10
  %2 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  %3 = extractvalue %exception-struct.46 %2, 0, !dbg !0
  store i8* %3, i8** %exn.slot, !dbg !0
  %4 = extractvalue %exception-struct.46 %2, 1, !dbg !0
  store i32 %4, i32* %ehselector.slot, !dbg !0
  %exn = load i8** %exn.slot, !dbg !0
  %5 = call i8* @__cxa_begin_catch(i8* %exn), !dbg !0
  call void @trace_exitLexicalScope(i32 %trace-call), !dbg !0
  invoke void @__cxa_rethrow()
          to label %normal-dest12 unwind label %call-unwind-landing-pad, !dbg !0

normal-dest12:                                    ; preds = %call-unwind-landing-pad
  invoke void @__cxa_end_catch()
          to label %normal-dest13 unwind label %call-unwind-landing-pad, !dbg !0

normal-dest13:                                    ; preds = %normal-dest12
  br label %call-cont-block, !dbg !0

call-cont-block:                                  ; preds = %normal-dest13, %normal-dest11
  call void @trace_exitLexicalScope(i32 %trace-call), !dbg !0
  call void @firstValueIfMultipleValue(%T_sp.50* %1), !dbg !0
  call void @copyTsp(%T_sp.50* %1, %T_sp.50* %result-ptr), !dbg !0
  br label %tagbody-G4291, !dbg !0

tagbody-G4291:                                    ; preds = %call-cont-block, %tagbody-G3919
  %trace-call15 = call i32 @trace_enterCallScope(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 13, i32 9, %ActivationFrame_sp.54* %call-args14), !dbg !0
  call void @makeValueFrame(%ActivationFrame_sp.54* %call-args14, i32 1, %ActivationFrame_sp.54* %LET), !dbg !0
  %call-args14-ref-0 = invoke %T_sp.50* @valueFrameReference(%ActivationFrame_sp.54* %call-args14, i32 0)
          to label %normal-dest16 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest16:                                    ; preds = %tagbody-G4291
  %trace-call18 = call i32 @trace_enterCallScope(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 13, i32 14, %ActivationFrame_sp.54* %call-args17), !dbg !0
  call void @makeValueFrame(%ActivationFrame_sp.54* %call-args17, i32 1, %ActivationFrame_sp.54* %LET), !dbg !0
  %call-args17-ref-0 = invoke %T_sp.50* @valueFrameReference(%ActivationFrame_sp.54* %call-args17, i32 0)
          to label %normal-dest19 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest19:                                    ; preds = %normal-dest16
  invoke void @lexicalValueRead(%T_sp.50* %call-args17-ref-0, i32 0, i32 0, %ActivationFrame_sp.54* %LET)
          to label %normal-dest20 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest20:                                    ; preds = %normal-dest19
  call void @firstValueIfMultipleValue(%T_sp.50* %call-args17-ref-0), !dbg !0
  invoke void @invokePossibleMultipleValueSymbolFunction(%T_sp.50* %call-args14-ref-0, %Sym_sp.52* @"CORE:NULL", %ActivationFrame_sp.54* %call-args17)
          to label %normal-dest21 unwind label %call-unwind-landing-pad22, !dbg !0

normal-dest21:                                    ; preds = %normal-dest20
  br label %call-cont-block26, !dbg !0

call-unwind-landing-pad22:                        ; preds = %normal-dest24, %call-unwind-landing-pad22, %normal-dest20
  %6 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  %7 = extractvalue %exception-struct.46 %6, 0, !dbg !0
  store i8* %7, i8** %exn.slot, !dbg !0
  %8 = extractvalue %exception-struct.46 %6, 1, !dbg !0
  store i32 %8, i32* %ehselector.slot, !dbg !0
  %exn23 = load i8** %exn.slot, !dbg !0
  %9 = call i8* @__cxa_begin_catch(i8* %exn23), !dbg !0
  call void @trace_exitLexicalScope(i32 %trace-call18), !dbg !0
  invoke void @__cxa_rethrow()
          to label %normal-dest24 unwind label %call-unwind-landing-pad22, !dbg !0

normal-dest24:                                    ; preds = %call-unwind-landing-pad22
  invoke void @__cxa_end_catch()
          to label %normal-dest25 unwind label %call-unwind-landing-pad22, !dbg !0

normal-dest25:                                    ; preds = %normal-dest24
  br label %call-cont-block26, !dbg !0

call-cont-block26:                                ; preds = %normal-dest25, %normal-dest21
  call void @trace_exitLexicalScope(i32 %trace-call18), !dbg !0
  call void @firstValueIfMultipleValue(%T_sp.50* %call-args14-ref-0), !dbg !0
  invoke void @invokePossibleMultipleValueSymbolFunction(%T_sp.50* %if-cond-tsp, %Sym_sp.52* @"CORE:NOT", %ActivationFrame_sp.54* %call-args14)
          to label %normal-dest27 unwind label %call-unwind-landing-pad28, !dbg !0

normal-dest27:                                    ; preds = %call-cont-block26
  br label %call-cont-block32, !dbg !0

call-unwind-landing-pad28:                        ; preds = %normal-dest30, %call-unwind-landing-pad28, %call-cont-block26
  %10 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  %11 = extractvalue %exception-struct.46 %10, 0, !dbg !0
  store i8* %11, i8** %exn.slot, !dbg !0
  %12 = extractvalue %exception-struct.46 %10, 1, !dbg !0
  store i32 %12, i32* %ehselector.slot, !dbg !0
  %exn29 = load i8** %exn.slot, !dbg !0
  %13 = call i8* @__cxa_begin_catch(i8* %exn29), !dbg !0
  call void @trace_exitLexicalScope(i32 %trace-call15), !dbg !0
  invoke void @__cxa_rethrow()
          to label %normal-dest30 unwind label %call-unwind-landing-pad28, !dbg !0

normal-dest30:                                    ; preds = %call-unwind-landing-pad28
  invoke void @__cxa_end_catch()
          to label %normal-dest31 unwind label %call-unwind-landing-pad28, !dbg !0

normal-dest31:                                    ; preds = %normal-dest30
  br label %call-cont-block32, !dbg !0

call-cont-block32:                                ; preds = %normal-dest31, %normal-dest27
  call void @trace_exitLexicalScope(i32 %trace-call15), !dbg !0
  %14 = invoke i32 @isTrueTsp(%T_sp.50* %if-cond-tsp)
          to label %normal-dest33 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest33:                                    ; preds = %call-cont-block32
  %ifcond = icmp eq i32 %14, 1, !dbg !0
  br i1 %ifcond, label %then, label %else, !dbg !0

then:                                             ; preds = %normal-dest33
  br label %tagbody-G4290, !dbg !0

remainder34:                                      ; No predecessors!
  br label %ifcont, !dbg !0

else:                                             ; preds = %normal-dest33
  call void @makeNil(%T_sp.50* %result-ptr), !dbg !0
  br label %ifcont, !dbg !0

ifcont:                                           ; preds = %else, %remainder34
  br label %tagbody-cont, !dbg !0

tagbody-cont:                                     ; preds = %ifcont
  call void @makeNil(%T_sp.50* %result-ptr), !dbg !0
  call void @makeNil(%T_sp.50* %result-ptr), !dbg !0
  br label %let-cont-block, !dbg !0

let-unwind-landing-pad-block:                     ; preds = %normal-dest36, %let-unwind-landing-pad-block, %call-cont-block32, %normal-dest19, %normal-dest16, %tagbody-G4291, %normal-dest9, %normal-dest8, %tagbody-G4290, %tagbody-G3917
  %15 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  %16 = extractvalue %exception-struct.46 %15, 0, !dbg !0
  store i8* %16, i8** %exn.slot, !dbg !0
  %17 = extractvalue %exception-struct.46 %15, 1, !dbg !0
  store i32 %17, i32* %ehselector.slot, !dbg !0
  %exn35 = load i8** %exn.slot, !dbg !0
  %18 = call i8* @__cxa_begin_catch(i8* %exn35), !dbg !0
  call void @debugPrintI32(i32 1001), !dbg !0
  call void @gdb(), !dbg !0
  call void @trace_exitLexicalScope(i32 %trace-LET), !dbg !0
  call void @debugPrintI32(i32 1002), !dbg !0
  invoke void @__cxa_rethrow()
          to label %normal-dest36 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest36:                                    ; preds = %let-unwind-landing-pad-block
  invoke void @__cxa_end_catch()
          to label %normal-dest37 unwind label %let-unwind-landing-pad-block, !dbg !0

normal-dest37:                                    ; preds = %normal-dest36
  br label %let-cont-block, !dbg !0

let-cont-block:                                   ; preds = %normal-dest37, %tagbody-cont
  call void @trace_exitLexicalScope(i32 %trace-LET), !dbg !0
  %19 = invoke %T_sp.50* @lexicalValueReference(i32 0, i32 0, %ActivationFrame_sp.54* %"LET*")
          to label %normal-dest38 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest38:                                    ; preds = %let-cont-block
  %trace-call40 = call i32 @trace_enterCallScope(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 16, i32 25, %ActivationFrame_sp.54* %call-args39), !dbg !0
  call void @makeValueFrame(%ActivationFrame_sp.54* %call-args39, i32 1, %ActivationFrame_sp.54* %"LET*"), !dbg !0
  %call-args39-ref-0 = invoke %T_sp.50* @valueFrameReference(%ActivationFrame_sp.54* %call-args39, i32 0)
          to label %normal-dest41 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest41:                                    ; preds = %normal-dest38
  invoke void @lexicalValueRead(%T_sp.50* %call-args39-ref-0, i32 0, i32 0, %ActivationFrame_sp.54* %"LET*")
          to label %normal-dest42 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest42:                                    ; preds = %normal-dest41
  call void @firstValueIfMultipleValue(%T_sp.50* %call-args39-ref-0), !dbg !0
  invoke void @invokePossibleMultipleValueSymbolFunction(%T_sp.50* %19, %Sym_sp.52* @"CORE:CDR", %ActivationFrame_sp.54* %call-args39)
          to label %normal-dest43 unwind label %call-unwind-landing-pad44, !dbg !0

normal-dest43:                                    ; preds = %normal-dest42
  br label %call-cont-block48, !dbg !0

call-unwind-landing-pad44:                        ; preds = %normal-dest46, %call-unwind-landing-pad44, %normal-dest42
  %20 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  %21 = extractvalue %exception-struct.46 %20, 0, !dbg !0
  store i8* %21, i8** %exn.slot, !dbg !0
  %22 = extractvalue %exception-struct.46 %20, 1, !dbg !0
  store i32 %22, i32* %ehselector.slot, !dbg !0
  %exn45 = load i8** %exn.slot, !dbg !0
  %23 = call i8* @__cxa_begin_catch(i8* %exn45), !dbg !0
  call void @trace_exitLexicalScope(i32 %trace-call40), !dbg !0
  invoke void @__cxa_rethrow()
          to label %normal-dest46 unwind label %call-unwind-landing-pad44, !dbg !0

normal-dest46:                                    ; preds = %call-unwind-landing-pad44
  invoke void @__cxa_end_catch()
          to label %normal-dest47 unwind label %call-unwind-landing-pad44, !dbg !0

normal-dest47:                                    ; preds = %normal-dest46
  br label %call-cont-block48, !dbg !0

call-cont-block48:                                ; preds = %normal-dest47, %normal-dest43
  call void @trace_exitLexicalScope(i32 %trace-call40), !dbg !0
  call void @firstValueIfMultipleValue(%T_sp.50* %19), !dbg !0
  call void @copyTsp(%T_sp.50* %19, %T_sp.50* %result-ptr), !dbg !0
  br label %tagbody-G391849, !dbg !0

tagbody-G391849:                                  ; preds = %call-cont-block48, %tagbody-G3918
  invoke void @lexicalValueRead(%T_sp.50* %if-cond-tsp50, i32 0, i32 0, %ActivationFrame_sp.54* %"LET*")
          to label %normal-dest51 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest51:                                    ; preds = %tagbody-G391849
  %24 = invoke i32 @isTrueTsp(%T_sp.50* %if-cond-tsp50)
          to label %normal-dest52 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest52:                                    ; preds = %normal-dest51
  %ifcond53 = icmp eq i32 %24, 1, !dbg !0
  br i1 %ifcond53, label %then54, label %else56, !dbg !0

then54:                                           ; preds = %normal-dest52
  br label %tagbody-G3917, !dbg !0

remainder55:                                      ; No predecessors!
  br label %ifcont57, !dbg !0

else56:                                           ; preds = %normal-dest52
  call void @makeNil(%T_sp.50* %result-ptr), !dbg !0
  br label %ifcont57, !dbg !0

ifcont57:                                         ; preds = %else56, %remainder55
  br label %tagbody-cont58, !dbg !0

tagbody-cont58:                                   ; preds = %ifcont57
  call void @makeNil(%T_sp.50* %result-ptr), !dbg !0
  br label %let-cont-block63, !dbg !0

let-unwind-landing-pad-block59:                   ; preds = %normal-dest61, %let-unwind-landing-pad-block59, %normal-dest51, %tagbody-G391849, %normal-dest41, %normal-dest38, %let-cont-block, %normal-dest1, %normal-dest, %entry
  %25 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  %26 = extractvalue %exception-struct.46 %25, 0, !dbg !0
  store i8* %26, i8** %exn.slot, !dbg !0
  %27 = extractvalue %exception-struct.46 %25, 1, !dbg !0
  store i32 %27, i32* %ehselector.slot, !dbg !0
  %exn60 = load i8** %exn.slot, !dbg !0
  %28 = call i8* @__cxa_begin_catch(i8* %exn60), !dbg !0
  call void @debugPrintI32(i32 1001), !dbg !0
  call void @gdb(), !dbg !0
  call void @trace_exitLexicalScope(i32 %"trace-LET*"), !dbg !0
  call void @debugPrintI32(i32 1002), !dbg !0
  invoke void @__cxa_rethrow()
          to label %normal-dest61 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest61:                                    ; preds = %let-unwind-landing-pad-block59
  invoke void @__cxa_end_catch()
          to label %normal-dest62 unwind label %let-unwind-landing-pad-block59, !dbg !0

normal-dest62:                                    ; preds = %normal-dest61
  br label %let-cont-block63, !dbg !0

let-cont-block63:                                 ; preds = %normal-dest62, %tagbody-cont58
  call void @trace_exitLexicalScope(i32 %"trace-LET*"), !dbg !0
  call void @destructTsp(%T_sp.50* %if-cond-tsp50), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args39), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args17), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args14), !dbg !0
  call void @destructTsp(%T_sp.50* %if-cond-tsp), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-obj4), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-val3), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %LET), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-obj), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-val), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %"LET*"), !dbg !0
  ret void, !dbg !0

cleanup-landing-pad:                              ; No predecessors!
  %29 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          cleanup, !dbg !0
  %30 = extractvalue %exception-struct.46 %29, 0, !dbg !0
  store i8* %30, i8** %exn.slot, !dbg !0
  %31 = extractvalue %exception-struct.46 %29, 1, !dbg !0
  store i32 %31, i32* %ehselector.slot, !dbg !0
  call void @debugPrintI32(i32 100), !dbg !0
  br label %ehcleanup, !dbg !0

ehcleanup:                                        ; preds = %cleanup-landing-pad
  call void @destructTsp(%T_sp.50* %if-cond-tsp50), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args39), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args17), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args14), !dbg !0
  call void @destructTsp(%T_sp.50* %if-cond-tsp), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %call-args), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-obj4), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-val3), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %LET), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-obj), !dbg !0
  call void @destructTsp(%T_sp.50* %temp-val), !dbg !0
  call void @destructAFsp(%ActivationFrame_sp.54* %"LET*"), !dbg !0
  br label %ehresume, !dbg !0

ehresume:                                         ; preds = %ehcleanup
  call void @debugPrintI32(i32 101), !dbg !0
  %exn7 = load i8** %exn.slot, !dbg !0
  invoke void @_Unwind_Resume(i8* %exn7)
          to label %normal-dest64 unwind label %terminate-lpad, !dbg !0

normal-dest64:                                    ; preds = %ehresume
  unreachable, !dbg !0

terminate-lpad:                                   ; preds = %ehresume
  %32 = landingpad %exception-struct.46 personality i32 (...)* @__gxx_personality_v0
          catch i8* null, !dbg !0
  call void @debugPrintI32(i32 9999), !dbg !0
  call void @cando_terminate(i8* getelementptr inbounds ([7 x i8]* @":::global-str-te.lsp", i32 0, i32 0), i32 1, i32 2, i8* getelementptr inbounds ([5 x i8]* @":::global-str-repl", i32 0, i32 0)), !dbg !0
  unreachable, !dbg !0
}

--------------  Function verified OK!!!!!!!
About to get-lisp-function
Assertion failed: (HasInsideLoopSuccs && "Loop block has no in-loop successors!"), function verifyLoop, file /Users/meister/Development/cando/externals/src/llvm-3.2.dev/include/llvm/Analysis/LoopInfoImpl.h, line 297.

Program received signal SIGABRT, Aborted.
0x00007fff8788f212 in __pthread_kill ()
(gdb) 
