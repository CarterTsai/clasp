;; start
(sym "test" "test")
(sym "specialized_lambda_list" "specialized-lambda-list")
(sym "specialized_specializers" "specialized-specializers")
(sym "lambda_list" "lambda-list")
(sym "extract_lambda_list" "extract-lambda-list")
(sym "extract_specializers" "extract-specializers")
(sym "analyze_lambda_list" "analyze-lambda-list")
(sym "path" "path")
(sym "ensure_directories_exist" "ensure-directories-exist")
(sym "char" "char")
(sym "input_stream_designator" "input-stream-designator")
(sym "recursive_p" "recursive-p")
(sym "optional" "optional")
(sym "eof_value" "eof-value")
(sym "eof_error_p" "eof-error-p")
(sym "predicate" "predicate")
(sym "sequences" "sequences")
(sym "superclasses" "superclasses")
(sym "read" "read")
(sym "read_delimited_list" "read-delimited-list")
(sym "convert_to_list_of_classes" "convert-to-list-of-classes")
(sym "ensure_class_using_class" "ensure-class-using-class")
(sym "make_instance" "make-instance")
(sym "reinitialize_instance" "reinitialize-instance")
(sym "shared_initialize" "shared-initialize")
(sym "every" "every")
(sym "some" "some")
(sym "notevery" "notevery")
(sym "notany" "notany")
(sym "getf" "getf")
