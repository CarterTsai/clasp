(load "../common/symbolCreation.lisp")


(currentPackage "CorePkg")

(load "symbolScrape.inc")




SYMBOL_SC_(input_stream_designator)
SYMBOL_SC_(car)
SYMBOL_SC_(cdr)
SYMBOL_SC_(dotimes)
SYMBOL_SC_(dolist)
SYMBOL_SC_(do)
SYMBOL_SC_(package)
SYMBOL_SC_(string)
SYMBOL_SC_(eof_error_p)
SYMBOL_SC_(eof_value)
SYMBOL_SC_(start)
SYMBOL_SC_(end)
SYMBOL_SC_(preserve_whitespace)
SYMBOL_SC_(aref)
SYMBOL_SC_(nth)
SYMBOL_SC_(io)
SYMBOL_SC_(probe)
SYMBOL_SC_(error)
SYMBOL_SC_(newVersion)
SYMBOL_SC_(renameAndDelete)
SYMBOL_SC_(overwrite)
SYMBOL_SC_(append)
SYMBOL_SC_(supersede)
SYMBOL_SC_(create)
SYMBOL_SC_(input_stream)
SYMBOL_SC_(recursive_p)
SYMBOL_SC_(dimensions)
SYMBOL_SC_(element_type)
SYMBOL_SC_(initial_element)
SYMBOL_SC_(adjustable)

SYMBOL_SC_(gethash)
SYMBOL_SC_(object)
SYMBOL_SC_(eq)
SYMBOL_SC_(eql)
SYMBOL_SC_(equal)
SYMBOL_SC_(equalp)
SYMBOL_SC_(okey)
SYMBOL_SC_(hash_table)
SYMBOL_SC_(default)

KEYWORD_SC_(output)
KEYWORD_SC_(input)
KEYWORD_SC_(default)
KEYWORD_SC_(internal)
KEYWORD_SC_(external)
KEYWORD_SC_(inherited)
KEYWORD_SC_(changed)
SYMBOL_SC_(STARload_printSTAR)
EXPORT_SC_(STARload_printSTAR)
SYMBOL_SC_(STARload_verboseSTAR)
EXPORT_SC_(STARload_verboseSTAR)
SYMBOL_SC_(ifDoesNotExist)


KEYWORD_SC_(debug)
KEYWORD_SC_(direct_super_classes)
SYMBOL_SC_(lambda)
EXPORT_SC_(lambda)
SYMBOL_SC_(Symbol)
EXPORT_SC_(Symbol)
SYMBOL_SC_(Color)
EXPORT_SC_(Color)
SYMBOL_SC_(foreach)
EXPORT_SC_(foreach)
SYMBOL_SC_(STARPATHSTAR)
EXPORT_SC_(STARPATHSTAR)
SYMBOL_SC_(STARARGSSTAR)
EXPORT_SC_(STARARGSSTAR)
SYMBOL_SC_(STARpackageSTAR)
EXPORT_SC_(STARpackageSTAR)
SYMBOL_SC_(STARcurrent_working_directorySTAR)
EXPORT_SC_(STARcurrent_working_directorySTAR)
SYMBOL_SC_(STARmodulesSTAR)
EXPORT_SC_(STARmodulesSTAR)
SYMBOL_SC_(progn)
EXPORT_SC_(progn)
SYMBOL_SC_(back_quote)
EXPORT_SC_(back_quote)
SYMBOL_SC_(double_back_quote)
EXPORT_SC_(double_back_quote)
SYMBOL_SC_(comma)
EXPORT_SC_(comma)
SYMBOL_SC_(comma_at)
EXPORT_SC_(comma_at)
SYMBOL_SC_(quote)
EXPORT_SC_(quote)
SYMBOL_SC_(function)
EXPORT_SC_(function)
SYMBOL_SC_(slot)
EXPORT_SC_(slot)
SYMBOL_SC_(slot_value)
EXPORT_SC_(slot_value)
SYMBOL_SC_(values)
EXPORT_SC_(values)
SYMBOL_SC_(item)
EXPORT_SC_(item)
SYMBOL_SC_(alist)
EXPORT_SC_(alist)
SYMBOL_SC_(list)
EXPORT_SC_(list)
SYMBOL_SC_(key)
EXPORT_SC_(key)
EXPORT_SC_(test)
SYMBOL_SC_(test_not)
EXPORT_SC_(test_not)

KEYWORD_SC_(name)
SYMBOL_SC_(forward_referenced_class)
SYMBOL_SC_(standard_class)
EXPORT_SC_(standard_class)
SYMBOL_SC_(rest)

SYMBOL_SC_(instance)
SYMBOL_SC_(slot_names)
SYMBOL_SC_(all_keys)




SYMBOL_SC_(STARread_suppressSTAR)
(insert-create-code "_lisp->symbol(_sym_STARread_suppressSTAR)->setDynamicValue(_lisp->_false());")



(finish)

