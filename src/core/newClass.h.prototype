#ifndef	Class_H //[
#define Class_H



#include <stdio.h>
#include <string>
#include <vector>
#include <set>
#include "foundation.h"
#include "object.h"


namespace mbb {


SMART(Class);
class O_Class : public O_Object
{
    LISP_CLASS(MbbPackage,O_Class,Class,O_Object);
public:
    O_Class(const O_Class& copy);
private: // ---- instance variables ----
    vector<SReal>		_RealStack;
public: // static functions for hooking into LISP
    static void exposeCando(RPLisp e);
    static void exposePython() {IMPLEMENT_ME();};
//    static void initializeGlobals(RPLisp lisp);
public: // virtual functions inherited from Object
    void	initialize();
    void	lispInitialize(RPKeyedArguments kargs, RPLisp env);
    void	archiveBase(RPNode node);
//	string	__repr__() const;

public: // machine control procedures
};
OBJECT_CONVERTERS(O_Class);



};
#endif //]
