


all:	cando


cando: $(OBJECTS) main.o


export VSINSTALLDIR=C:\Program Files\Microsoft Visual Studio .NET 2003\Common7\IDE
export VCINSTALLDIR=C:\Program Files\Microsoft Visual Studio .NET 2003
export FrameworkDir=C:\WINDOWS\Microsoft.NET\Framework
export FrameworkVersion=v1.1.4322
export FrameworkSDKDir=C:\Program Files\Microsoft Visual Studio .NET 2003\SDK\v1.1



export uVSINSTALLDIR=/cygdrive/c/Program Files/Microsoft Visual Studio .NET 2003/Common7/IDE
export uVCINSTALLDIR=/cygdrive/c/Program Files/Microsoft Visual Studio .NET 2003
export uFrameworkDir=/cygdrive/c/WINDOWS/Microsoft.NET/Framework
export uFrameworkVersion=v.1.1.4322
export uFrameworkSDKDir=/cygdrive/c/Program Files/Microsoft Visual Studio .NET 2003/SDK/v1.1


#@rem
#@rem Root of Visual Studio ide installed files.
#@rem
export DevEnvDir=$(VSINSTALLDIR)
export uDevEnvDir=$(uVSINSTALLDIR)


#
#@rem
#@rem Root of Visual C++ installed files.
#@rem
export MSVCDir=$(VCINSTALLDIR)\Vc7
export uMSVCDir=$(uVCINSTALLDIR)/Vc7



PATH:=$(uDevEnvDir):$(uMSVCDir)/bin:$(uVCINSTALLDIR)/Common7/Tools:$(uVCINSTALLDIR)/Common7/Tools/bin/prerelease:$(uVCINSTALLDIR)/Common7/Tools/bin:$(uFrameworkSDKDir)/bin:$(uFrameworkDir)/$(uFrameworkVersion):$(PATH)

export INCLUDE=$(MSVCDir)\atlmfc\include;$(MSVCDir)\INCLUDE;$(MSVCDir)\PlatformSDK\include\prerelease;$(MSVCDir)\PlatformSDK\include;$(FrameworkSDKDir)\include


export LIB=$(VCINSTALLDIR)\Common7\IDE;$(MSVCDir)\atlmfc\lib;$(MSVCDir)\LIB;$(MSVCDir)\PlatformSDK\lib\prerelease;$(MSVCDir)\PlatformSDK\lib;$(FrameworkSDKDir)\lib

####### Compiler, tools and options

SOURCEDIR=../
CC	=	cl
CXX	=	cl
GNUCXX	=	g++


LFLAGS	=	/NOLOGO /DEBUG /SUBSYSTEM:console /DLL



ifeq ($(CDEBUG_FULL),1)
CXXFLAGS+=	/MLd -DCDEBUG_FULL
LFLAGS	+=	/LIBPATH:$(WIN_PYTHON_ROOT)/libs
TARGETNAME = mbbCxx_d
else
TARGETNAME = mbbCxx
endif




#CXXFLAGS=	/EHsc /GR -Zi -Od $(DEFINES)
GNUCXXFLAGS=	$(DEFINES)
INCPATH	=	$(EXTERNAL_INCLUDES)
LINK	=	link
#LFLAGS	=	/NOLOGO /DEBUG /SUBSYSTEM:console /DLL /NODEFAULTLIB:LIBC
#LIBS	=	$(EXTERNAL_LIBS) msvcrtd.lib
LIBS	=	$(EXTERNAL_LIBS)


MOC	=	$(QTDIR)\bin\moc.exe
UIC	=	$(QTDIR)\bin\uic.exe

ZIP	=	zip -r -9

####### Files


include	makefile.files



OBJECTS = $(SOURCES:.cc=.o)

INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	
OBJMOC	=	
DIST	=	
TARGET	=	$(TARGETNAME).dll
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .c .o

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -Fo$@ `cygpath -w $<`

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -Fo$@ `cygpath -w $<`


%.d:    %.cc
	echo BUILDING DEPENDENCIES for $<
	echo CYGWIN_EXTERNAL_INCLUDES = $(CYGWIN_EXTERNAL_INCLUDES)
	set -e; rm -f $@
	$(GNUCXX) -MM $(GNUCXXFLAGS) $(CYGWIN_EXTERNAL_INCLUDES) $< > $@._
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@._ > $@;
	rm -f $@._

%.d:    %.c
	echo BUILDING DEPENDENCIES for $<
	echo CYGWIN_EXTERNAL_INCLUDES = $(CYGWIN_EXTERNAL_INCLUDES)
	set -e; rm -f $@
	$(GNUCXX) -MM $(GNUCXXFLAGS) $(CYGWIN_EXTERNAL_INCLUDES) $< > $@._
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@._ > $@;
	rm -f $@._

####### Build rules

all: $(TARGET)

info:
	echo $(OBJECTS)
	
#
# gnu make way
#
$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) /OUT:$(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)
	lib /OUT:$(TARGETNAME).lib $(OBJECTS)


#
# nmake way
#
#$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
#	$(LINK) $(LFLAGS) /OUT:$(TARGET) @<<
#	    $(OBJECTS) $(OBJMOC) $(LIBS)
#<<



moc: $(SRCMOC)

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-rm -f *~ core

clhelp:
	cl /help

linkhelp:
	link /Link

####### Compile

-include	$(SOURCES:.cc=.d)
