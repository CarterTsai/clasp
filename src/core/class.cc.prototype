#define	DEBUG_LEVEL_FULL

#include "foundation.h"
#include "object.h"
#include "lisp.h"
#include "class.h"
#include "archiveNode.h"
#include "archive.h"
#include "lisp.h"

// last include is wrappers.h
#include "wrappers.h"


namespace mbb {


void Class_O::exposeCando(RPLisp lisp)
{
    class_<Class_O>(lisp->lisp())
	.initArgs("(self)")
    ;
}

Object_sp Class_O::__init__(RPExecutable exec, RPCons args, RPEnvironment environ, RPLisp lisp)
{_OF();
    return lisp->onil();
}

#if 0 // old way to initialize
void	Class_O::lispInitialize(RPKeyedArguments kargs, RPLisp env)
{
    this->Base::lispInitialize(kargs,env);
    	// your stuff here
}
#endif
#
#
void	Class_O::initialize()
{
    this->Base::initialize();
}

void	Class_O::archiveBase(NodeP node)
{
    this->Base::archiveBase(node);
    IMPLEMENT_ME();
}


EXPOSE_CLASS(Class_O);

};




