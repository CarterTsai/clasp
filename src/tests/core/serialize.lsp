(defvar *s* (core:make-hash-table :test 'eq))
(setf (gethash :a *s*) 1)
(setf (gethash :b *s*) 2)
(setf (gethash :c *s*) (gethash :a *s*))

(defvar *vec* (make-array 2 :element-type t :fill-pointer 0 :adjustable t))
(vector-push-extend "this " *vec*)
(vector-push-extend "is " *vec*)
(vector-push-extend "a " *vec*)
(vector-push-extend "test" *vec*)

(defvar *save-archive* (core:make-sexp-save-archive))
(core:put *save-archive* :first *s*)
(core:put *save-archive* :second *vec*)
(defvar *msg* (with-output-to-string (s) (core:sexp-save-archive-write *save-archive* s)))

(defvar *load-archive* (core:make-sexp-load-archive))
(defvar *msgsexp* (read-from-string *msg*))
(core:parse-from-object *load-archive* *msgsexp*)
(defvar *rht* (core:get *load-archive* :first))
(defvar *rvec* (core:get *load-archive* :second))
