
/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpbundle.lsp,924
(defun bundle-function-name (path-and-name-as-symbol &optional (bundle-type 'kernel))bundle-function-name4,20
(defun bundle-type-as-string (bundle-type)bundle-type-as-string9,304
(defun bundle-name-as-string (bundle-name)bundle-name-as-string15,521
(defun create-bundle-module (part-pathnames &key (output-file (pathname "image")))create-bundle-module18,612
(defun make-bundle-wrapper (parts bundle-name)make-bundle-wrapper49,2070
(defvar *echo-system* t)*echo-system*60,2568
(defun safe-system (cmd)safe-system61,2593
(defun execute-llc (part-bitcode-pathname)execute-llc74,2940
(defun execute-link (bundle-pathname all-part-pathnames)execute-link89,3486
(defun make-bundle (parts-pathnames &optional (bundle-name '_image)make-bundle108,4446
(defun boot-part-pathnames (last-file)boot-part-pathnames123,5200
(defun bundle-boot (last-file &optional (bundle-name +image-pathname+))bundle-boot128,5392

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpeh.lsp,869
(defmacro with-setjmp-longjmp ((env jmp-buf-var) body longjmp-body cleanup-body )with-setjmp-longjmp11,81
(defun try.attach-dispatch-blocks-to-clauses (clauses)try.attach-dispatch-blocks-to-clauses38,1112
(defun try.separate-clauses (clauses)try.separate-clauses46,1460
(defparameter *try.clause-stack* nil*try.clause-stack*63,2153
(defun try.flatten (structure)try.flatten66,2233
(defun try.identify-all-unique-clause-types (all-clause-types)try.identify-all-unique-clause-types71,2371
(defun try.add-landing-pad-clauses (landpad catch-clause-types)try.add-landing-pad-clauses83,2674
(defun try.one-dispatcher-and-handler (cur-dispatcher-blocktry.one-dispatcher-and-handler101,3181
(defmacro with-block-name-prefix ( &optional (prefix "") &rest body )with-block-name-prefix145,4617
(defmacro with-try (env code &rest catch-clauses)with-try153,4746

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpglobals.lsp,78
(defvar *global-vars* nil)     ; variables declared special*global-vars*2,1

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpintrinsics.lsp,7608
(defun debug-write-module (module filename)debug-write-module8,24
(defvar *irbuilder* nil*irbuilder*16,291
(defvar *irbuilder-ltv-function-alloca* nil*irbuilder-ltv-function-alloca*21,481
(defvar *irbuilder-ltv-function-body* nil*irbuilder-ltv-function-body*23,598
(defvar *irbuilder-function-alloca* nil*irbuilder-function-alloca*26,702
(defvar *irbuilder-function-body* nil*irbuilder-function-body*28,803
(defmacro with-compiler-env ( (&rest options) &rest body )with-compiler-env33,898
(defconstant +double+ (llvm-sys:type-get-double-ty *llvm-context*))+double+58,1558
(defconstant +void+ (llvm-sys:type-get-void-ty *llvm-context*))+void+59,1626
(defconstant +i1+ (llvm-sys:type-get-int1-ty *llvm-context*))+i1+60,1690
(defconstant +i8+ (llvm-sys:type-get-int8-ty *llvm-context*))+i8+61,1752
(defconstant +i8*+ (llvm-sys:type-get-pointer-to +i8+))+i8*+62,1814
(defconstant +i8**+ (llvm-sys:type-get-pointer-to +i8*+))+i8**+63,1870
(defconstant +i32+ (llvm-sys:type-get-int32-ty *llvm-context*))+i32+64,1928
(defconstant +i32*+ (llvm-sys:type-get-pointer-to +i32+))+i32*+65,1992
(defconstant +i32**+ (llvm-sys:type-get-pointer-to +i32*+))+i32**+66,2050
(defconstant +i64+ (llvm-sys:type-get-int64-ty *llvm-context*))+i64+67,2110
(defconstant +exception-struct+ (llvm-sys:struct-type-get *llvm-context* (list +i8*+ +i32+) nil))+exception-struct+69,2293
(defconstant +sp-counted-base+ (llvm-sys:struct-type-get *llvm-context* (list +i32+ +i32+) nil)) ;; "sp-counted-base-ty" +sp-counted-base+71,2392
(defconstant +sp-counted-base-ptr+ (llvm-sys:type-get-pointer-to +sp-counted-base+))+sp-counted-base-ptr+72,2514
(defconstant +shared-count+ (llvm-sys:struct-type-get *llvm-context* (list +sp-counted-base-ptr+) nil)) ;; "shared_count" +shared-count+73,2599
(defconstant +setjmp.buf+ (llvm-sys:struct-type-get *llvm-context* (list +i8*+ +i8*+ +i8*+ +i8*+ +i8*+) nil))+setjmp.buf+86,3178
(defconstant +setjmp.buf*+ (llvm-sys:type-get-pointer-to +setjmp.buf+))+setjmp.buf*+87,3288
(defun smart-pointer-fields (data-ptr-type &rest additional-fields)smart-pointer-fields98,3667
(defconstant +sym+ (llvm-sys:type-get-int32-ty *llvm-context*))+sym+116,4328
(defconstant +sym-ptr+ (llvm-sys:type-get-pointer-to +sym+))+sym-ptr+117,4392
(defconstant +symsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +sym-ptr+) nil)) ;; "Sym_sp" +symsp+118,4453
(defconstant +symsp*+ (llvm-sys:type-get-pointer-to +symsp+))+symsp*+119,4567
(defconstant +t+ (llvm-sys:struct-type-get *llvm-context* nil  nil)) ;; "T_O"+t+124,4722
(defconstant +t-ptr+ (llvm-sys:type-get-pointer-to +t+))+t-ptr+125,4800
(defconstant +tsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +t-ptr+) nil))  ;; "T_sp" +tsp+126,4857
(defconstant +tsp*+ (llvm-sys:type-get-pointer-to +tsp+))+tsp*+127,4966
(defconstant +tsp**+ (llvm-sys:type-get-pointer-to +tsp*+))+tsp**+128,5024
(defconstant +tmv+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +t-ptr+ +i32+) nil))  ;; "T_mv" +tmv+131,5086
(defconstant +tmv*+ (llvm-sys:type-get-pointer-to +tmv+))+tmv*+132,5201
(defconstant +tmv**+ (llvm-sys:type-get-pointer-to +tmv*+))+tmv**+133,5259
(defconstant +ltv+ (llvm-sys:struct-type-get *llvm-context* nil  nil)) ;; "VectorObjectsWithFillPtr_O"+ltv+137,5434
(defconstant +ltv-ptr+ (llvm-sys:type-get-pointer-to +ltv+))+ltv-ptr+138,5537
(defconstant +ltvsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +ltv-ptr+) nil))  ;; "T_sp" +ltvsp+139,5598
(defconstant +ltvsp*+ (llvm-sys:type-get-pointer-to +ltvsp+))+ltvsp*+140,5711
(defconstant +ltvsp**+ (llvm-sys:type-get-pointer-to +ltvsp*+))+ltvsp**+141,5773
(defconstant +af+ (llvm-sys:struct-type-get *llvm-context* nil  nil)) ;; "ActivationFrame_O"+af+145,5840
(defconstant +af-ptr+ (llvm-sys:type-get-pointer-to +af+))+af-ptr+146,5933
(defconstant +afsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +af-ptr+)  nil)) ;; "ActivationFrame_sp"+afsp+147,5992
(defconstant +afsp*+ (llvm-sys:type-get-pointer-to +afsp+))+afsp*+148,6116
(defconstant +fn-tmv*-afsp*+ (llvm-sys:function-type-get +void+ (list +tmv*+ +afsp*+)))+fn-tmv*-afsp*+153,6180
(defconstant +fn-tmv*-afsp*-ptr+ (llvm-sys:type-get-pointer-to +fn-tmv*-afsp*+))+fn-tmv*-afsp*-ptr+154,6268
(defconstant +fn-void+ (llvm-sys:function-type-get +void+ nil))+fn-void+156,6350
(defconstant +fn-void-ptr+ (llvm-sys:type-get-pointer-to +fn-void+))+fn-void-ptr+157,6414
(defconstant +InvocationHistoryStack*+ +i8*+ "Make this a generic pointer")+InvocationHistoryStack*+165,6720
(defconstant +InvocationHistoryFrame+ (llvm-sys:struct-type-create *llvm-context* :name "InvocationHistoryFrame"))+InvocationHistoryFrame+166,6796
(defconstant +InvocationHistoryFrame*+ (llvm-sys:type-get-pointer-to +InvocationHistoryFrame+))+InvocationHistoryFrame*+167,6911
(defconstant +LispFunctionIHF+ (llvm-sys:struct-type-create *llvm-context* :elements (list +InvocationHistoryFrame+ +tsp+ +tsp+ +tsp+ +i32+ +i32+) :name "LispFunctionIHF"))+LispFunctionIHF+170,7317
(defconstant +LispCompiledFunctionIHF+ (llvm-sys:struct-type-create *llvm-context* :elements (list +LispFunctionIHF+) :name "LispCompiledFunctionIHF"))+LispCompiledFunctionIHF+172,7574
(defun alloca-size (type)alloca-size182,7844
(defvar *exceptions**exceptions*198,8459
(defvar *exception-types-hash-table* (make-hash-table :test #'eq)*exception-types-hash-table*205,8659
(defun exception-typeid*-from-name (name)exception-typeid*-from-name212,8940
(defparameter *primitives* (make-hash-table :test 'equal))*primitives*230,9184
(defun matching-arguments (required-type given-type arg-index)matching-arguments233,9245
(defun assert-result-isa-llvm-value (result)assert-result-isa-llvm-value242,9603
(defun throw-if-mismatched-arguments (fn-name args)throw-if-mismatched-arguments246,9794
(defconstant +tsp*-or-tmv*+ :tsp*-or-tmv*+tsp*-or-tmv*+262,10355
(defun dispatch-function-name (name &optional required-first-argument-type)dispatch-function-name265,10480
(defun create-primitive-function (module name return-ty args-ty var-args does-not-throw does-not-return)create-primitive-function280,10799
(defun primitive (module name return-ty args-ty &key var-args does-not-throw does-not-return )primitive289,11195
(defun primitive-does-not-throw (module name return-ty args-ty &key var-args does-not-return)primitive-does-not-throw313,12297
(defun define-primitives-in-module (module)define-primitives-in-module316,12507
(define-primitives-in-module *run-time-module*)*run-time-module*521,25210
(defvar *compile-file-pathname* nil "Store the path-name of the currently compiled file")*compile-file-pathname*533,25364
(defvar *gv-source-path-name* nil ;; (jit-make-global-string-ptr *compile-file-pathname* "compile-file-pathname")*gv-source-path-name*534,25454
(defvar *current-line-number* 0 "Store the line number of the currently compiled form")*current-line-number*536,25647
(defvar *current-column* 0 "Store the column of the currently compiled form")*current-column*537,25735
(defvar *current-form* nil "The current form being compiled")*current-form*538,25813
(defvar *current-env* nil "Current environment")*current-env*539,25875
(defvar *current-function* nil "The current function")*current-function*540,25924
(defvar *current-function-name* nil "Store the current function name")*current-function-name*541,25979
(defvar *gv-current-function-name* nil "Store the global value in the module of the current function name ")*gv-current-function-name*542,26050

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpir.lsp,10738
(defun irc-next-environment-id ()irc-next-environment-id10,154
(defun irc-single-step-callback (env)irc-single-step-callback14,259
(defun irc-attach-debugging-info-to-value-frame (af symbol-list-designator env)irc-attach-debugging-info-to-value-frame18,339
(defun handle-exit-scope (scope-info env)handle-exit-scope35,989
(defun irc-personality-function ()irc-personality-function42,1234
(defun irc-set-cleanup (landpad val)irc-set-cleanup45,1333
(defun irc-create-landing-pad (num-clauses &optional (name ""))irc-create-landing-pad49,1410
(defun irc-add-clause (landpad type)irc-add-clause52,1585
(defun irc-switch (go-value default-block num-cases)irc-switch55,1661
(defun irc-gep (str index &optional (name "gep"))irc-gep59,1793
(defun irc-exception-typeid** (name)irc-exception-typeid**63,1918
(defun irc-exception-typeid* (name)irc-exception-typeid*66,1995
(defun irc-preserve-exception-info (env lpad)irc-preserve-exception-info69,2070
(defmacro with-catch ((exn.slot exception-ptr env) &rest body)with-catch80,2614
(defun irc-save-exception-info (env lpad)irc-save-exception-info89,2919
(defparameter *use-unwind-resume* nil)*use-unwind-resume*96,3341
(defun irc-generate-resume-code (exn.slot ehselector.slot env)irc-generate-resume-code102,3385
(defun irc-rethrow (env)irc-rethrow121,4161
(defun irc-set-function-for-environment (env fn)irc-set-function-for-environment130,4359
(defun irc-get-function-for-environment (env)irc-get-function-for-environment133,4445
(defun irc-setup-cleanup-return-block (env)irc-setup-cleanup-return-block136,4527
(defun irc-get-cleanup-return-block (env)irc-get-cleanup-return-block140,4698
(defun irc-setup-cleanup-landing-pad-block (env)irc-setup-cleanup-landing-pad-block144,4789
(defun irc-get-cleanup-landing-pad-block (env)irc-get-cleanup-landing-pad-block150,5117
(defun irc-setup-exception-handler-cleanup-block (env)irc-setup-exception-handler-cleanup-block156,5220
(defun irc-get-exception-handler-cleanup-block (env)irc-get-exception-handler-cleanup-block162,5437
(defun irc-setup-exception-handler-resume-block (env)irc-setup-exception-handler-resume-block166,5550
(defun irc-get-exception-handler-resume-block (env)irc-get-exception-handler-resume-block170,5743
(defun irc-setup-terminate-landing-pad-block (env)irc-setup-terminate-landing-pad-block174,5854
(defun irc-get-terminate-landing-pad-block (env)irc-get-terminate-landing-pad-block178,6047
(defun irc-classify-variable (env var)irc-classify-variable185,6155
(defun irc-new-unbound-function-value-environment (old-env &key number-of-functions (label "function-frame"))irc-new-unbound-function-value-environment199,6548
(defun irc-new-function-value-environment (old-env &key functions (label "function-frame"))irc-new-function-value-environment208,6978
(defun irc-new-unbound-tagbody-environment (old-env &key (label "tagbody-frame"))irc-new-unbound-tagbody-environment217,7338
(defun irc-new-tagbody-environment (old-env &key (label "function-frame"))irc-new-tagbody-environment226,7712
(defun irc-new-macrolet-environment (old-env)irc-new-macrolet-environment232,7936
(defun irc-new-symbol-macrolet-environment (old-env)irc-new-symbol-macrolet-environment238,8122
(defun irc-new-unbound-value-environment (old-env &key lambda-list-handlerirc-new-unbound-value-environment246,8331
(defun irc-new-value-environment (old-envirc-new-value-environment263,9127
(defun irc-new-unbound-value-environment-of-size (old-env &key number-of-arguments (label "value-frame"))irc-new-unbound-value-environment-of-size281,9736
(defun irc-new-value-environment-of-size (old-env &key number-of-arguments fill-runtime-form (label "env") )irc-new-value-environment-of-size293,10312
(defun irc-new-block-environment (old-env &key name)irc-new-block-environment311,10865
(defun irc-new-catch-environment (old-env)irc-new-catch-environment316,10991
(defun irc-new-unwind-protect-environment (old-env)irc-new-unwind-protect-environment320,11072
(defun irc-set-renv (env renv)irc-set-renv329,11178
(defun irc-renv (env)irc-renv332,11248
(defun irc-parent-renv (env)irc-parent-renv342,11533
(defun irc-i32-current-line-number ()irc-i32-current-line-number353,11851
(defun irc-i32-current-column ()irc-i32-current-column356,11934
(defun irc-generate-terminate-code (env)irc-generate-terminate-code362,12010
(defun irc-generate-unwind-protect-landing-pad-code (env)irc-generate-unwind-protect-landing-pad-code373,12574
(defun irc-make-unwind-protect-environment (unwind-form parent-env)irc-make-unwind-protect-environment395,13105
(defun irc-unwind-unwind-protect-environment (env)irc-unwind-unwind-protect-environment401,13306
(defun irc-do-unwind-environment (env)irc-do-unwind-environment407,13523
(defun irc-unwind-environment (env)irc-unwind-environment420,14048
(defun irc-unwind-to-environment (begin-env end-env)irc-unwind-to-environment432,14306
(defun irc-rename-insert-block (name)irc-rename-insert-block459,14612
(defun irc-basic-block-create (name &optional function)irc-basic-block-create465,14853
(defun irc-get-insert-block ()irc-get-insert-block470,15074
(defun irc-append-basic-block (function theblock)irc-append-basic-block473,15149
(defun irc-set-insert-point (theblock)irc-set-insert-point477,15359
(defparameter *next-low-level-trace-index* 1000000001)*next-low-level-trace-index*484,15552
(defmacro irc-low-level-trace (&optional where)irc-low-level-trace485,15607
(defun irc-begin-landing-pad-block (theblock &optional (function *current-function*))irc-begin-landing-pad-block494,16012
(defun irc-begin-block (theblock &optional (function *current-function*))irc-begin-block501,16265
(defun irc-branch-to-and-begin-block (theblock)irc-branch-to-and-begin-block509,16523
(defun irc-icmp-slt (lhs rhs &optional (name ""))irc-icmp-slt513,16622
(defun irc-icmp-ne (lhs rhs &optional (name ""))irc-icmp-ne518,16730
(defun irc-icmp-eq (lhs rhs &optional (name ""))irc-icmp-eq521,16834
(defun irc-cond-br (icond true false &optional branchWeights)irc-cond-br525,16939
(defun irc-prev-inst-terminator-inst-p ()irc-prev-inst-terminator-inst-p528,17074
(defun irc-br (block)irc-br538,17319
(defun irc-branch-if-no-terminator-inst (block)irc-branch-if-no-terminator-inst546,17564
(defun irc-add (lhs rhs &optional (label ""))irc-add552,17708
(defun irc-load (ptr &optional (label ""))irc-load558,17817
(Defun irc-store (val result &optional (label ""))irc-store561,17921
(defun irc-phi (return-type num-reserved-values &optional (label "phi"))irc-phi566,18029
(defun irc-phi-add-incoming (phi-node value basic-block)irc-phi-add-incoming569,18178
(defun irc-unreachable ()irc-unreachable573,18291
(defun irc-trunc (value type &optional (label "trunc"))irc-trunc577,18364
(defparameter *exception-handler-cleanup-block* nil)*exception-handler-cleanup-block*588,18741
(defparameter *exception-clause-types-to-handle* nil)*exception-clause-types-to-handle*589,18794
(defmacro with-new-function (( ;; FN is bound to the function being createdwith-new-function591,18849
(defun irc-function-create (lisp-function-name body envirc-function-create651,21750
(defun irc-function-cleanup-and-return (env)irc-function-cleanup-and-return707,24447
(defun irc-cleanup-function-environment (env #||invocation-history-frame||#)irc-cleanup-function-environment743,26275
(defun irc-push-cleanup (env cleanup-code)irc-push-cleanup771,27112
(defun irc-push-unwind (env unwind-code)irc-push-unwind777,27307
(defmacro with-alloca-insert-point (env irbuilderwith-alloca-insert-point783,27462
(defmacro with-irbuilder ((env irbuilder) &rest code)with-irbuilder805,28381
(defun irc-alloca-tmv (env &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-tmv817,28771
(defun irc-alloca-tsp (env &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-tsp824,29081
(defun irc-alloca-afsp (env &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-afsp831,29454
(defun irc-alloca-afsp-value-frame-of-size (env size &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-afsp-value-frame-of-size838,29832
(defun irc-make-value-frame (env result-af size)irc-make-value-frame845,30255
(defun irc-make-tagbody-frame (env result-af)irc-make-tagbody-frame848,30419
(defun irc-alloca-i32-no-init (env &key (irbuilder *irbuilder-function-alloca*) (label "i32-"))irc-alloca-i32-no-init852,30514
(defun irc-alloca-i8 (env init-val &key (irbuilder *irbuilder-function-alloca*) (label "i8-"))irc-alloca-i8858,30782
(defun irc-alloca-i32 (env init-val &key (irbuilder *irbuilder-function-alloca*) (label "i32-"))irc-alloca-i32865,31098
(defun irc-alloca-i8* (env &key (irbuilder *irbuilder-function-alloca*) (label "i8*-"))irc-alloca-i8*872,31419
(defun irc-allocal-lisp-compiled-function-ihf (env &key (irbuilder *irbuilder-function-alloca*) (label "ihf"))irc-allocal-lisp-compiled-function-ihf878,31666
(defun irc-alloca-setjmp.buf (env &key (irbuilder *irbuilder-function-alloca*) (label "setjmp.buf"))irc-alloca-setjmp.buf884,31987
(defun irc-setjmp.buf-set-jump-address ( env setjmp.buf address)irc-setjmp.buf-set-jump-address889,32281
(defun irc-setjmp.buf-user0-set-i32 ( env setjmp.buf val)irc-setjmp.buf-user0-set-i32892,32410
(defun irc-setjmp.buf-user0-get-i32 ( env setjmp.buf)irc-setjmp.buf-user0-get-i32895,32544
(defun irc-setjmp.buf-user0-allocate-set-tmv ( env setjmp.buf tmv-val)irc-setjmp.buf-user0-allocate-set-tmv898,32651
(defun irc-setjmp.buf-user0-get-tmv ( env result setjmp.buf)irc-setjmp.buf-user0-get-tmv901,32792
(defun irc-setjmp.buf-user0-delete-tmv ( env setjmp.buf)irc-setjmp.buf-user0-delete-tmv904,32913
(defun irc-create-invoke (func args unwind-dest label)irc-create-invoke913,33032
(defun irc-create-call (func args label)irc-create-call937,34245
(defparameter *current-unwind-landing-pad-dest* nil)*current-unwind-landing-pad-dest*955,34940
(defmacro with-landing-pad (unwind-landing-pad-dest &rest body)with-landing-pad957,34994
(defun irc-invoke-or-call (func args label)irc-invoke-or-call972,35499
(defun irc-call (env function-name &rest args &aux (label ""))irc-call986,36021
(defun irc-verify-function (fn &optional (continue t))irc-verify-function1008,36693
(defun get-function-or-error (module name &optional first-argument)get-function-or-error1025,37534
(defun irc-global-symbol (sym env)irc-global-symbol1041,38423
(defun irc-global-setf-symbol (sym env)irc-global-setf-symbol1047,38548
(defun irc-symbol-value-ref (env sym)irc-symbol-value-ref1060,38758
(defun irc-environment-activation-frame (env)irc-environment-activation-frame1066,38911

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpquote.lsp,6848
(defvar *load-time-value-initialization-function*)*load-time-value-initialization-function*5,21
(defvar *load-time-value-result* nil*load-time-value-result*8,131
(defvar *load-time-value-coalesce* nil)*load-time-value-coalesce*11,234
(defvar *load-time-initializer-environment* nil)*load-time-initializer-environment*12,274
(defvar *run-time-literal-holder-name* "<default>")*run-time-literal-holder-name*15,325
(defvar *run-time-literal-holder* (load-time-value-array *run-time-literal-holder-name* 1024)*run-time-literal-holder*16,377
(defvar *run-time-value-nil-index* (data-vector-push-extend *run-time-literal-holder* nil 16))*run-time-value-nil-index*19,563
(defvar *run-time-value-t-index* (data-vector-push-extend *run-time-literal-holder* t 16))*run-time-value-t-index*20,658
(defvar *load-time-value-holder-global-var* nil*load-time-value-holder-global-var*22,750
(defvar *run-time-value-holder-global-var**run-time-value-holder-global-var*25,870
(defvar *next-load-time-value-index*  nil*next-load-time-value-index*43,1374
(defvar *generate-compile-file-load-time-values* nil*generate-compile-file-load-time-values*48,1524
(defun get-next-available-ltv-entry (&optional value)get-next-available-ltv-entry57,1728
(defmacro with-next-load-time-value ((ltv-ref obj env) &rest creator)with-next-load-time-value67,2044
(defmacro with-coalesce-load-time-value ((ltv-ref result obj env)with-coalesce-load-time-value87,2817
(defmacro with-initialize-load-time-value ((ltv-ref ltv-idx env) &rest initializer)with-initialize-load-time-value126,4976
(defmacro with-walk-structure ((obj env) &key maker walker)with-walk-structure136,5507
(defparameter *node-table* (make-hash-table :test #'eq))*node-table*155,5891
(defun walk-structure-simple (cur env)walk-structure-simple158,5950
(defun walk-structure-cons (cur env)walk-structure-cons164,6074
(defun make-ltv-cons (val env)make-ltv-cons176,6444
(defun make-ltv-cons (val env)make-ltv-cons193,7057
(defun initialize-ltv-cons (obj ltv-idx env)initialize-ltv-cons198,7181
(defun walk-structure-array-objects (obj env)walk-structure-array-objects211,7689
(defun make-ltv-array-objects (val env)make-ltv-array-objects220,8014
(defun initialize-ltv-array-objects (obj ltv-idx env)initialize-ltv-array-objects232,8638
(defun walk-structure-hash-table (obj env)walk-structure-hash-table249,9202
(defun make-ltv-hash-table (val env)make-ltv-hash-table257,9434
(defun initialize-ltv-hash-table (obj ltv-idx env)initialize-ltv-hash-table266,9910
(defun walk-structure (cur env)walk-structure284,10684
(defun initialize-ltv-nodes (env)initialize-ltv-nodes301,11056
(defun codegen-ltv/container (result obj env)codegen-ltv/container313,11434
(defvar *fixnum-coalesce* nil *fixnum-coalesce*330,11763
(defun codegen-ltv-fixnum (result obj env)codegen-ltv-fixnum333,11845
(defvar *bignum-coalesce* nil)*bignum-coalesce*341,12065
(defun codegen-ltv-bignum (result obj env)codegen-ltv-bignum342,12096
(defvar *symbol-coalesce* nil)*symbol-coalesce*349,12383
(defun codegen-ltv/symbol (result symbol env)codegen-ltv/symbol350,12414
(defun symbol-indices-in-current-*load-time-value-vector* (symbols env)symbol-indices-in-current-*load-time-value-vector*373,13392
(defvar *character-coalesce* nil)*character-coalesce*386,13731
(defun codegen-ltv/character (result obj env)codegen-ltv/character387,13765
(defun codegen-ltv/integer (result obj env)codegen-ltv/integer399,14112
(defvar *string-coalesce* nil)*string-coalesce*407,14347
(defun codegen-ltv/string (result str env)codegen-ltv/string408,14378
(defvar *short-float-coalesce* nil)*short-float-coalesce*422,14827
(defun codegen-ltv-short-float (result dbl env)codegen-ltv-short-float423,14863
(defvar *single-float-coalesce* nil)*single-float-coalesce*430,15214
(defun codegen-ltv-single-float (result dbl env)codegen-ltv-single-float431,15251
(defvar *double-float-coalesce* nil)*double-float-coalesce*438,15605
(defun codegen-ltv-double-float (result dbl env)codegen-ltv-double-float439,15642
(defvar *long-float-coalesce* nil)*long-float-coalesce*448,16046
(defun codegen-ltv-long-float (result dbl env)codegen-ltv-long-float449,16081
(defun codegen-ltv/float (result arg env)codegen-ltv/float458,16477
(defvar *nil-coalesce* nil)*nil-coalesce*470,16867
(defun codegen-ltv/nil (result env)codegen-ltv/nil471,16895
(defvar *t-coalesce* nil)*t-coalesce*476,17076
(defun codegen-ltv-t (result env)codegen-ltv-t477,17102
(defun codegen-ltv/array (result obj env)codegen-ltv/array485,17280
(defvar *run-time-literal-holder* nil*run-time-literal-holder*504,17959
(defvar *run-time-value-nil-index* nil)*run-time-value-nil-index*508,18148
(defvar *run-time-value-t-index* nil)*run-time-value-t-index*509,18188
(defun codegen-rtv/nil (result env)codegen-rtv/nil512,18228
(defun codegen-rtv/t (result env)codegen-rtv/t517,18438
(defvar *run-time-symbol-coalesce* (make-hash-table :test #'eq)*run-time-symbol-coalesce*523,18643
(defun codegen-rtv/symbol (result sym env)codegen-rtv/symbol525,18737
(defun codegen-rtv/all (result val env)codegen-rtv/all539,19144
(defun codegen-rtv (result obj env)codegen-rtv550,19491
(defvar *run-time-symbol-type-symbol-coalesce* (make-hash-table :test #'eq)*run-time-symbol-type-symbol-coalesce*562,19846
(defun codegen-rts/symbol (result sym env)codegen-rts/symbol564,19952
(defvar *next-load-time-symbol-index*  nil*next-load-time-symbol-index*587,20637
(defun get-next-available-lts-entry (&optional value)get-next-available-lts-entry592,20778
(defvar *symbol-type-symbol-coalesce* nil)*symbol-type-symbol-coalesce*602,21135
(defun codegen-lts/symbol (result symbol env)codegen-lts/symbol603,21178
(defmacro with-load-time-value-counters ((ltv-value-counter ltv-symbol-counter &key postscript ) &rest body)with-load-time-value-counters649,22736
(defun initialize-special-load-time-values (env)initialize-special-load-time-values664,23320
(defmacro with-load-time-value-unit ((ltv-init-fn) &rest body)with-load-time-value-unit671,23484
(defmacro with-ltv-function-codegen ((result env) &rest form)with-ltv-function-codegen763,27877
(defun compile-ltv-thunk (name form env)compile-ltv-thunk779,28597
(defun codegen-literal (result obj env)codegen-literal817,30022
(defun codegen-quote (result rest env)codegen-quote837,31078
(defun pretty-load-time-name (literal ltv-idx)pretty-load-time-name842,31202
(defun compile-reference-to-load-time-value (idx env &optional (name "value"))compile-reference-to-load-time-value851,31511
(defun compile-reference-to-literal (literal env)compile-reference-to-literal858,31793
(defun codegen-symbol (result obj env)codegen-symbol867,32223
(defun compile-reference-to-symbol (symbol env)compile-reference-to-symbol878,32713

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmprepl.lsp,0

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpsetup.lsp,641
(defvar *image-name* '_image)*image-name*4,20
(defvar *image-directory* (pathname "sys:lisp;kernel;"))*image-directory*5,50
(defvar *debug-attach-debugging-info-to-value-frames* t)*debug-attach-debugging-info-to-value-frames*7,108
(defvar *debug-ir* nil)*debug-ir*11,240
(defvar *debug-compiler* nil)*debug-compiler*16,328
(defvar *low-level-trace* nil*low-level-trace*23,451
(defvar *low-level-trace-print* nil*low-level-trace-print*29,694
(defvar *next-environment-id* 2000000)*next-environment-id*36,868
(defparameter *next-try-id* 0)*next-try-id*42,954
(defparameter *block-name-prefix* "")*block-name-prefix*48,1060

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpvar.lsp,58
(defun si::register-global (name)si::register-global4,3

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpvars.lsp,329
(defun codegen-special-var-lookup (result sym env)codegen-special-var-lookup10,134
(defun codegen-lexical-var-lookup (result depth-index env)codegen-lexical-var-lookup22,624
(defun codegen-var-lookup (result sym old-env)codegen-var-lookup33,1131
(defun codegen-symbol-value (result symbol env)codegen-symbol-value43,1616

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//cmpwalk.lsp,99
(defun code-walk-using-compiler (form env &key code-walker-function)code-walk-using-compiler4,20

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//compile-env-api.lsp,2564
(defun cmp-env-root (&optional (env *cmp-env-root*))cmp-env-root18,550
(defun cmp-env-copy (&optional (env *cmp-env*))cmp-env-copy24,800
(defmacro cmp-env-variables (&optional (env '*cmp-env*))cmp-env-variables27,879
(defmacro cmp-env-functions (&optional (env '*cmp-env*))cmp-env-functions30,952
(defun cmp-env-register-global-macro (name function)cmp-env-register-global-macro33,1025
(defun cmp-env-register-macro (name function &optional (env *cmp-env*))cmp-env-register-macro40,1260
(defun cmp-env-register-var (var &optional (env *cmp-env*) (boundp t))cmp-env-register-var45,1406
(defun cmp-env-declare-special (name &optional (env *cmp-env*))cmp-env-declare-special56,1640
(defun cmp-env-cleanups (env)cmp-env-cleanups66,1838
(defun cmp-env-add-declaration (type arguments &optional (env *cmp-env*))cmp-env-add-declaration90,2531
(defun cmp-env-extend-declaration (type arguments &optional (env *cmp-env*))cmp-env-extend-declaration95,2687
(defun cmp-env-register-function (fun &optional (env *cmp-env*))cmp-env-register-function100,2882
(defun cmp-env-register-ftype (name declaration &optional (env *cmp-env*))cmp-env-register-ftype105,3025
(defun cmp-env-register-symbol-macro (name form &optional (env *cmp-env*))cmp-env-register-symbol-macro110,3183
(defun cmp-env-register-block (blk &optional (env *cmp-env*))cmp-env-register-block116,3394
(defun cmp-env-register-tag (name tag &optional (env *cmp-env*))cmp-env-register-tag121,3531
(defun cmp-env-register-cleanup (form &optional (env *cmp-env*))cmp-env-register-cleanup126,3666
(defun cmp-env-search-function (name &optional (env *cmp-env*))cmp-env-search-function130,3805
(defun cmp-env-search-variables (type name env)cmp-env-search-variables151,4462
(defun cmp-env-search-block (name &optional (env *cmp-env*))cmp-env-search-block184,5399
(defun cmp-env-search-tag (name &optional (env *cmp-env*))cmp-env-search-tag187,5507
(defun cmp-env-search-symbol-macro (name &optional (env *cmp-env*))cmp-env-search-symbol-macro190,5611
(defun cmp-env-search-var (name &optional (env *cmp-env*))cmp-env-search-var193,5737
(defun cmp-env-search-macro (name &optional (env *cmp-env*))cmp-env-search-macro196,5838
(defun cmp-env-search-ftype (name &optional (env *cmp-env*))cmp-env-search-ftype200,5979
(defun cmp-env-mark (mark &optional (env *cmp-env*))cmp-env-mark207,6189
(defun cmp-env-new-variables (new-env old-env)cmp-env-new-variables213,6351
(defun cmp-env-search-declaration (kind &optional (env *cmp-env*))cmp-env-search-declaration219,6546

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//compilefile.lsp,1410
(defparameter *compile-verbose* nil )*compile-verbose*5,21
(defparameter *compile-print* nil )*compile-print*6,59
(defun compile-main-function (name ltv-manager-fn  )compile-main-function11,99
(defmacro with-compilation-unit ((&key override module function-pass-manager ) &rest body)with-compilation-unit32,798
(defun t1defmacro (form)t1defmacro48,1220
(defun t1progn (form)t1progn59,1575
(defun t1defparameter (form)t1defparameter65,1709
(defun t1eval-when (form)t1eval-when72,1858
(defun describe-form (form)describe-form90,2551
(defun compile-top-level (form)compile-top-level102,2844
(defun compiler-macro-function (sym)compiler-macro-function111,3097
(defun t1expr (form)t1expr116,3144
(defvar *use-function-pass-manager-for-compile-file* t)*use-function-pass-manager-for-compile-file*138,3789
(defun create-function-pass-manager-for-compile-file (module)create-function-pass-manager-for-compile-file141,3847
(defun create-llvm-module-for-compile-file (module-name)create-llvm-module-for-compile-file156,4687
(defun print-source-pos ()print-source-pos168,5104
(defun cfp-output-file-default (input-file)cfp-output-file-default175,5227
(defun compile-file-pathname (input-file &key (output-file nil output-file-p))compile-file-pathname188,5923
(defun cf-module-name (type pathname)cf-module-name194,6142
(defun compile-file (given-input-pathnamecompile-file199,6435

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//compiler-setup.lsp,200
(defparameter *engine-builder* (llvm-sys:make-engine-builder *the-module*))*engine-builder*2,1
(defparameter *the-execution-engine* (llvm-sys:create *engine-builder*))*the-execution-engine*10,379

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//compiler.lsp,5417
(defun parse-macro (name vl body &optional env)parse-macro8,27
(defun augment-environment-with-declares (env declares)augment-environment-with-declares17,195
(defun codegen-global-function-call (result sym env)codegen-global-function-call33,321
(defun codegen-lexical-function-call (result depth index env)codegen-lexical-function-call38,541
(defun compile-only-required-arguments (lambda-list-handler old-env activation-frame)compile-only-required-arguments43,741
(defun compile-copy-activation-frame (old-env new-env lambda-list-handler src-activation-frame dest-activation-frame)compile-copy-activation-frame54,1319
(defun compile-arguments (fn-name lambda-list-handler old-env src-activation-frame new-env)compile-arguments72,2257
(defparameter *lambda-args-num* 0)*lambda-args-num*98,3847
(defvar *all-funcs-for-one-compile* nil*all-funcs-for-one-compile*100,3883
(defun compile-lambda/lambda-block (name lambda-list-handler declares docstring code old-env &key wrap-block block-name)compile-lambda/lambda-block103,4035
(defun compile-lambda-function (lambda env &key (function-name-as-string "lambda"))compile-lambda-function144,5553
(defun codegen-closure (result lambda-or-lambda-block env &key (func-name-str "lambda"))codegen-closure176,6891
(defun codegen-global-function-lookup (result sym env)codegen-global-function-lookup196,8002
(defun codegen-global-setf-function-lookup (result setf-function-name env)codegen-global-setf-function-lookup200,8133
(defun codegen-lexical-function-lookup (result depth index env)codegen-lexical-function-lookup206,8356
(defun codegen-function-symbol-lookup (result func env)codegen-function-symbol-lookup209,8533
(defun codegen-function-setf-symbol-lookup (result setf-func env)codegen-function-setf-symbol-lookup218,8904
(defun codegen-function (result name-or-lambda env)codegen-function228,9302
(defun codegen-fill-value-frame ( result-af exps parent-env evaluate-env)codegen-fill-value-frame248,10155
(defun codegen-call (result form old-env)codegen-call268,11046
(defun codegen-progn (result forms env)codegen-progn293,12326
(defun codegen-progv (result args env)codegen-progv308,12785
(defun codegen-multiple-value-call (result rest env)codegen-multiple-value-call332,13688
(defun codegen-multiple-value-prog1 (result rest env)codegen-multiple-value-prog1354,14733
(defun codegen-special-var-reference (var &optional env)codegen-special-var-reference379,15435
(defun codegen-lexical-var-reference (depth-index env)codegen-lexical-var-reference383,15601
(defun codegen-setq (result setq-pairs env)codegen-setq389,15842
(defun gather-lexical-variable-names (classified-symbols)gather-lexical-variable-names429,17132
(defun codegen-fill-let/let*-environment (operator-symbolcodegen-fill-let/let*-environment441,17534
(defun codegen-let/let* (operator-symbol result parts env)codegen-let/let*481,19235
(defun compile-if-cond (cond env)compile-if-cond546,21689
(defun codegen-if (result rest env)codegen-if557,22120
(defun extract-section (begin end)extract-section610,24562
(defun tagbody.enumerate-tag-blocks (code tagbody-env)tagbody.enumerate-tag-blocks619,24806
(defun codegen-tagbody (result rest env)codegen-tagbody632,25201
(defun codegen-go (result rest env)codegen-go677,27412
(defun codegen-block (result block-symbol body env)codegen-block695,27906
(defun codegen-return-from (result rest env)codegen-return-from720,28670
(defun codegen-fill-function-frame (operator-symbol function-env functions parent-env closure-env)codegen-fill-function-frame735,29260
(defun codegen-flet/labels (operator-symbol result rest env)codegen-flet/labels757,30448
(defun codegen-macrolet (result rest env)codegen-macrolet789,31811
(defun codegen-symbol-macrolet (result rest env)codegen-symbol-macrolet811,32475
(defun codegen-eval-when (result rest env)codegen-eval-when831,32920
(defun codegen-the/truly-the (result rest env)codegen-the/truly-the841,33193
(defun codegen-locally (result rest env)codegen-locally845,33278
(defun codegen-unwind-protect (result rest env)codegen-unwind-protect867,33986
(defun codegen-throw (result rest env)codegen-throw886,34528
(defun codegen-catch (result rest env)codegen-catch897,34950
(defun codegen-load-time-value (result rest env)codegen-load-time-value926,35896
(defun split-vars-declares-forms (parts)split-vars-declares-forms945,36656
(defparameter *nexti* 10000)*nexti*966,37201
(defun codegen-dbg-i32 (result rest env)codegen-dbg-i32967,37230
(defun codegen-special-operator (result head rest env)codegen-special-operator976,37454
(defun compile-macroexpand (form env)compile-macroexpand1017,39572
(defun codegen-application (result form env)codegen-application1023,39796
(defun augmented-special-operator-p (x)augmented-special-operator-p1042,40378
(defun codegen-atom (result obj env)codegen-atom1046,40494
(defun codegen (result form env)codegen1065,41394
(defun compile-thunk (name form env)compile-thunk1105,42816
(defun compile-interpreted-function (name func)compile-interpreted-function1126,43594
(defun compile* (name &optional definition env)compile*1142,44194
(defun compile-in-env (name &optional definition env)compile-in-env1169,45118
(defun compile (name &optional definition)compile1186,45926
(defun test-debug ()test-debug1190,46011
(defun disassemble (desig)disassemble1196,46087

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//debuginfo.lsp,3458
(defconstant +file.dbg+ :file.dbg)+file.dbg+4,20
(defvar *dbg-generate-dwarf* t)*dbg-generate-dwarf*6,56
(defvar *dbg-compile-unit* )*dbg-compile-unit*7,88
(defvar *dbg-current-file* )*dbg-current-file*8,117
(defvar *dbg-current-function*)*dbg-current-function*9,146
(defvar *dbg-current-scope* nil*dbg-current-scope*10,178
(defun walk-form-for-source-info (form)walk-form-for-source-info16,281
(defun dbg-create-function-type (difile function-type)dbg-create-function-type31,840
(defvar *dibuilder-type-hash-table* nil*dibuilder-type-hash-table*41,1224
(defmacro with-dibuilder ((module) &rest body)with-dibuilder44,1291
(defmacro with-dbg-compile-unit ((env source-pathname) &rest body)with-dbg-compile-unit51,1531
(defmacro with-dbg-file-descriptor ((env source-pathname) &rest body)with-dbg-file-descriptor77,2404
(defmacro with-dbg-function ((env name &key linkage-name form function function-type) &rest body)with-dbg-function95,3041
(defmacro with-dbg-lexical-block ((env block-form) &body body)with-dbg-lexical-block127,4275
(defun dbg-set-current-source-pos (env form)dbg-set-current-source-pos145,4765
(defparameter *llvm-metadata* (make-hash-table))*llvm-metadata*167,5477
(defun dbg-set-current-debug-location (filename pathname lineno column)dbg-set-current-debug-location170,5528
(defvar *current-file-metadata-node* nil*current-file-metadata-node*180,6000
(defun dbg-set-current-line ()dbg-set-current-line184,6105
(defmacro dbg-set-current-debug-location-here ()dbg-set-current-debug-location-here191,6194
(defun dbg-push-invocation-history-stack (invocation-history-frame)dbg-push-invocation-history-stack205,6581
(defun dbg-pop-invocation-history-stack ()dbg-pop-invocation-history-stack208,6697
(defun dbg-push-invocation-history-stack-top-af (env form)dbg-push-invocation-history-stack-top-af212,6791
(defun dbg-pop-invocation-history-stack-top-af (env form)dbg-pop-invocation-history-stack-top-af215,6913
(defun dbg-set-invocation-history-stack-top-source-pos (form)dbg-set-invocation-history-stack-top-source-pos219,7035
(defmacro compile-debug-print-object (msg obj)compile-debug-print-object235,7376
(defmacro compile-debug-print-i32 (msg obj)compile-debug-print-i32250,7923
(defun debug-generate-source-code (form)debug-generate-source-code263,8442
(defmacro trace-enter-lexical-scope ( scope-name env form )trace-enter-lexical-scope288,9170
(defun trace-exit-lexical-scope (scope-name env traceid)trace-exit-lexical-scope292,9304
(defun trace-enter-let-scope (env form)trace-enter-let-scope298,9444
(defun trace-exit-let-scope (env traceid)trace-exit-let-scope301,9531
(defun trace-enter-let*-scope (env form)trace-enter-let*-scope305,9623
(defun trace-exit-let*-scope (env traceid)trace-exit-let*-scope308,9715
(defun trace-enter-flet-scope (env form)trace-enter-flet-scope312,9812
(defun trace-exit-flet-scope (env traceid)trace-exit-flet-scope315,9901
(defun trace-enter-labels-scope (env form)trace-enter-labels-scope318,9994
(defun trace-exit-labels-scope (env traceid)trace-exit-labels-scope321,10087
(defun trace-enter-catch-scope (env form)trace-enter-catch-scope326,10186
(defun trace-exit-catch-scope (env traceid)trace-exit-catch-scope329,10278
(defun trace-enter-block-scope (env form)trace-enter-block-scope334,10375
(defun trace-exit-block-scope (env traceid)trace-exit-block-scope337,10467
(defun debug-gdb (env)debug-gdb346,10568

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//jit-setup.lsp,1513
(defun generate-target-triple ()generate-target-triple12,114
(defparameter *default-target-triple* (generate-target-triple)*default-target-triple*27,561
(defun llvm-create-module (name)llvm-create-module31,674
(defparameter *llvm-context* (llvm-sys::get-global-context))*llvm-context*44,874
(defparameter *run-time-module* (llvm-create-module "run-time-module"))*run-time-module*45,935
(defvar *the-module* nil*the-module*46,1007
(defparameter *the-module-dibuilder* nil*the-module-dibuilder*50,1096
(defun jit-constant-pointer-null-get (type)jit-constant-pointer-null-get54,1288
(defun jit-constant-i1 (val)jit-constant-i158,1379
(defun jit-constant-i8 (val)jit-constant-i863,1559
(defun jit-constant-i32 (val)jit-constant-i3268,1750
(defun jit-constant-i32-vector-ptr (vals)jit-constant-i32-vector-ptr74,1949
(defun jit-constant-i64 (val)jit-constant-i6493,2570
(defun jit-constant-unique-string-ptr (sn &optional (label "unique-str"))jit-constant-unique-string-ptr99,2753
(defun jit-make-global-string-ptr (str &optional (label "global-str"))jit-make-global-string-ptr109,3192
(defparameter *run-time-engine-builder* (llvm-sys:make-engine-builder *run-time-module*))*run-time-engine-builder*129,3809
(defparameter *run-time-execution-engine* (llvm-sys:create *run-time-engine-builder*))*run-time-execution-engine*136,4121
(defparameter *run-time-function-pass-manager* nil)*run-time-function-pass-manager*146,4482
(defun jit-function-name (lname)jit-function-name162,5479

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//lambdalist.lsp,1856
(defun compile-error-if-not-enough-arguments (env activation-frame number-of-passed-arguments lv-required-number-of-arguments)compile-error-if-not-enough-arguments6,27
(defun compile-error-if-wrong-number-of-arguments (env lv-src-activation-frame required-number-of-arguments)compile-error-if-wrong-number-of-arguments19,836
(defun compile-save-if-special (env target &key make-unbound)compile-save-if-special38,1931
(defun compile-save-if-special (env target &key make-unbound)compile-save-if-special53,2805
(defun compile-target-reference* (env target)compile-target-reference*68,3441
(defun define-binding-in-value-environment* (env target)define-binding-in-value-environment*98,4656
(defmacro with-target-reference-do ((target-ref target env) &rest body)with-target-reference-do117,5379
(defmacro with-target-reference-if-runtime-unbound-do ((target-ref target env) &rest body)with-target-reference-if-runtime-unbound-do137,6215
(defun compile-required-arguments (reqargs envcompile-required-arguments165,7397
(defun compile-optional-arguments (optargs old-envcompile-optional-arguments198,8642
(defun compile-rest-arguments (rest-var old-envcompile-rest-arguments254,11152
(defun compile-key-arguments-parse-arguments (keyargscompile-key-arguments-parse-arguments264,11565
(defun compile-key-arguments-fill-in-init-forms (keyargs new-env sawkeys)compile-key-arguments-fill-in-init-forms388,18694
(defun compile-key-arguments (keyargscompile-key-arguments417,19928
(defun compile-throw-if-excess-keyword-arguments (env argument-activation-frame arg-idx)compile-throw-if-excess-keyword-arguments460,21405
(defun compile-aux-arguments (auxargs old-env new-env)compile-aux-arguments467,21610
(defun compile-lambda-list-code (lambda-list-handler old-env argument-activation-frame new-env)compile-lambda-list-code494,22708

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//setjmp-longjmp-code/compile-main.lsp,7709
(defvar *cmp-env* nil*cmp-env*6,24
(defvar *cmp-env-root**cmp-env-root*32,1207
(defparameter *repl-functions* :illegal)*repl-functions*42,1489
(defmacro cmp-log (fmt &rest args ) nil)cmp-log56,1582
(defmacro cmp-log-dump (fn) nil)cmp-log-dump57,1623
(defmacro debug-print-i32 (num) nil)debug-print-i3258,1656
(defun is-debug-compiler-on ()is-debug-compiler-on63,1699
(defmacro debug-print-i32 (num)debug-print-i3266,1751
(defmacro cmp-log (fmt &rest args)cmp-log72,1890
(defmacro cmp-log-dump (fn-or-module)cmp-log-dump79,2073
(defun debug-write-module (module filename)debug-write-module87,2194
(defvar *irbuilder* nil*irbuilder*95,2462
(defvar *irbuilder-ltv-function-alloca* nil*irbuilder-ltv-function-alloca*100,2652
(defvar *irbuilder-ltv-function-body* nil*irbuilder-ltv-function-body*102,2769
(defvar *irbuilder-function-alloca* nil*irbuilder-function-alloca*105,2873
(defvar *irbuilder-function-body* nil*irbuilder-function-body*107,2974
(defmacro with-compiler-env ( (&rest options) &rest body )with-compiler-env112,3069
(defconstant +double+ (llvm-sys:type-get-double-ty *llvm-context*))+double+137,3729
(defconstant +void+ (llvm-sys:type-get-void-ty *llvm-context*))+void+138,3797
(defconstant +i1+ (llvm-sys:type-get-int1-ty *llvm-context*))+i1+139,3861
(defconstant +i8+ (llvm-sys:type-get-int8-ty *llvm-context*))+i8+140,3923
(defconstant +i8*+ (llvm-sys:type-get-pointer-to +i8+))+i8*+141,3985
(defconstant +i8**+ (llvm-sys:type-get-pointer-to +i8*+))+i8**+142,4041
(defconstant +i32+ (llvm-sys:type-get-int32-ty *llvm-context*))+i32+143,4099
(defconstant +i64+ (llvm-sys:type-get-int64-ty *llvm-context*))+i64+144,4163
(defconstant +exception-struct+ (llvm-sys:struct-type-get *llvm-context* (list +i8*+ +i32+) nil))+exception-struct+146,4346
(defconstant +i32*+ (llvm-sys:type-get-pointer-to +i32+))+i32*+147,4444
(defconstant +i32**+ (llvm-sys:type-get-pointer-to +i32*+))+i32**+148,4502
(defconstant +sp-counted-base+ (llvm-sys:struct-type-get *llvm-context* (list +i32+ +i32+) nil)) ;; "sp-counted-base-ty" +sp-counted-base+150,4563
(defconstant +sp-counted-base-ptr+ (llvm-sys:type-get-pointer-to +sp-counted-base+))+sp-counted-base-ptr+151,4685
(defconstant +shared-count+ (llvm-sys:struct-type-get *llvm-context* (list +sp-counted-base-ptr+) nil)) ;; "shared_count" +shared-count+152,4770
(defconstant +setjmp.buf+ (llvm-sys:struct-type-get *llvm-context* (list +i8*+ +i8*+ +i8*+ +i8*+ +i8*+) nil))+setjmp.buf+165,5349
(defconstant +setjmp.buf*+ (llvm-sys:type-get-pointer-to +setjmp.buf+))+setjmp.buf*+166,5459
(defun smart-pointer-fields (data-ptr-type &rest additional-fields)smart-pointer-fields177,5838
(defconstant +sym+ (llvm-sys:type-get-int32-ty *llvm-context*))+sym+195,6499
(defconstant +sym-ptr+ (llvm-sys:type-get-pointer-to +sym+))+sym-ptr+196,6563
(defconstant +symsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +sym-ptr+) nil)) ;; "Sym_sp" +symsp+197,6624
(defconstant +symsp*+ (llvm-sys:type-get-pointer-to +symsp+))+symsp*+198,6738
(defconstant +t+ (llvm-sys:struct-type-get *llvm-context* nil  nil)) ;; "T_O"+t+203,6893
(defconstant +t-ptr+ (llvm-sys:type-get-pointer-to +t+))+t-ptr+204,6971
(defconstant +tsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +t-ptr+) nil))  ;; "T_sp" +tsp+205,7028
(defconstant +tsp*+ (llvm-sys:type-get-pointer-to +tsp+))+tsp*+206,7137
(defconstant +tsp**+ (llvm-sys:type-get-pointer-to +tsp*+))+tsp**+207,7195
(defconstant +tmv+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +t-ptr+ +i32+) nil))  ;; "T_mv" +tmv+210,7257
(defconstant +tmv*+ (llvm-sys:type-get-pointer-to +tmv+))+tmv*+211,7372
(defconstant +tmv**+ (llvm-sys:type-get-pointer-to +tmv*+))+tmv**+212,7430
(defconstant +ltv+ (llvm-sys:struct-type-get *llvm-context* nil  nil)) ;; "VectorObjectsWithFillPtr_O"+ltv+216,7605
(defconstant +ltv-ptr+ (llvm-sys:type-get-pointer-to +ltv+))+ltv-ptr+217,7708
(defconstant +ltvsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +ltv-ptr+) nil))  ;; "T_sp" +ltvsp+218,7769
(defconstant +ltvsp*+ (llvm-sys:type-get-pointer-to +ltvsp+))+ltvsp*+219,7882
(defconstant +ltvsp**+ (llvm-sys:type-get-pointer-to +ltvsp*+))+ltvsp**+220,7944
(defconstant +af+ (llvm-sys:struct-type-get *llvm-context* nil  nil)) ;; "ActivationFrame_O"+af+224,8011
(defconstant +af-ptr+ (llvm-sys:type-get-pointer-to +af+))+af-ptr+225,8104
(defconstant +afsp+ (llvm-sys:struct-type-get *llvm-context* (smart-pointer-fields +af-ptr+)  nil)) ;; "ActivationFrame_sp"+afsp+226,8163
(defconstant +afsp*+ (llvm-sys:type-get-pointer-to +afsp+))+afsp*+227,8287
(defconstant +activation-frame-type+ (llvm-sys:type-get-int32-ty *llvm-context*))+activation-frame-type+233,8390
(defconstant +activation-frame+ (llvm-sys:struct-type-create *llvm-context* (list +activation-frame-type+) "ActivationFrame" nil))+activation-frame+235,8499
(defconstant +activation-frame*+ (llvm-sys:type-get-pointer-to +activation-frame+))+activation-frame*+236,8630
(defconstant +fn-tsp*-activation-frame*+ (llvm-sys:function-type-get +void+ (list +tsp*+ +activation-frame*+)))+fn-tsp*-activation-frame*+241,8806
(defconstant +fn-tmv*-afsp*+ (llvm-sys:function-type-get +void+ (list +tmv*+ +afsp*+)))+fn-tmv*-afsp*+244,8922
(defconstant +fn*+ (llvm-sys:type-get-pointer-to +fn-tmv*-afsp*+))+fn*+245,9010
(defvar *exceptions**exceptions*267,9743
(defvar *exception-types-hash-table* (make-hash-table :test #'eq)*exception-types-hash-table*274,9936
(defun exception-typeid*-from-name (name)exception-typeid*-from-name281,10217
(defparameter *primitives* (make-hash-table :test 'equal))*primitives*299,10461
(defun matching-arguments (required-type given-type arg-index)matching-arguments302,10522
(defun assert-result-isa-llvm-sys-value (result)assert-result-isa-llvm-sys-value311,10868
(defun throw-if-mismatched-arguments (fn-name args)throw-if-mismatched-arguments315,11058
(defconstant +tsp*-or-tmv*+ :tsp*-or-tmv*+tsp*-or-tmv*+331,11614
(defun dispatch-function-name (name &optional required-first-argument-type)dispatch-function-name334,11739
(defun create-primitive-function (module name return-ty args-ty var-args does-not-throw does-not-return)create-primitive-function349,12052
(defun primitive (module name return-ty args-ty &key var-args does-not-throw does-not-return )primitive358,12448
(defun primitive-does-not-throw (module name return-ty args-ty &key var-args does-not-return)primitive-does-not-throw382,13544
(defun define-primitives-in-module (module)define-primitives-in-module385,13754
(define-primitives-in-module *run-time-module*)*run-time-module*577,25736
(defvar *source-path-name* "-internal-code-no-file-" "Store the path-name of the currently compiled file")*source-path-name*589,25890
(defvar *gv-source-path-name* nil ;; (jit-make-global-string-ptr *source-path-name* "source-path-name")*gv-source-path-name*590,25997
(defvar *current-line-number* 0 "Store the line number of the currently compiled form")*current-line-number*592,26180
(defvar *current-column* 0 "Store the column of the currently compiled form")*current-column*593,26268
(defvar *current-form* nil "The current form being compiled")*current-form*594,26346
(defvar *current-env* nil "Current environment")*current-env*595,26408
(defvar *current-function* nil "The current function")*current-function*596,26457
(defvar *current-function-name* nil "Store the current function name")*current-function-name*597,26512
(defvar *gv-current-function-name* nil "Store the global value in the module of the current function name ")*gv-current-function-name*598,26583

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//setjmp-longjmp-code/compiler.lsp,5418
(defun parse-macro (name vl body &optional env)parse-macro8,27
(defun augment-environment-with-declares (env declares)augment-environment-with-declares13,180
(defun codegen-global-function-call (result sym env)codegen-global-function-call29,306
(defun codegen-lexical-function-call (result depth index env)codegen-lexical-function-call34,526
(defun compile-only-required-arguments (lambda-list-handler old-env activation-frame)compile-only-required-arguments39,726
(defun compile-copy-activation-frame (old-env new-env lambda-list-handler src-activation-frame dest-activation-frame)compile-copy-activation-frame50,1304
(defun compile-arguments (fn-name lambda-list-handler old-env src-activation-frame new-env)compile-arguments68,2242
(defparameter *lambda-args-num* 0)*lambda-args-num*92,3684
(defvar *all-funcs-for-one-compile* nil*all-funcs-for-one-compile*94,3720
(defun compile-lambda/lambda-block (name lambda-list-handler declares docstring code old-env &key wrap-block block-name)compile-lambda/lambda-block97,3872
(defun compile-lambda-function (lambda env &key (function-name-as-string "lambda"))compile-lambda-function137,5425
(defun codegen-closure (result lambda env &key (function-name "lambda"))codegen-closure169,6753
(defun codegen-global-function-lookup (result sym env)codegen-global-function-lookup185,7471
(defun codegen-global-setf-function-lookup (result setf-function-name env)codegen-global-setf-function-lookup189,7602
(defun codegen-lexical-function-lookup (result depth index env)codegen-lexical-function-lookup195,7825
(defun codegen-function-symbol-lookup (result func env)codegen-function-symbol-lookup198,8002
(defun codegen-function-setf-symbol-lookup (result setf-func env)codegen-function-setf-symbol-lookup207,8373
(defun codegen-function (result name-or-lambda env)codegen-function217,8771
(defun codegen-fill-pre-made-value-frame ( result-af exps parent-env evaluate-env)codegen-fill-pre-made-value-frame237,9620
(defun codegen-call (result form old-env)codegen-call258,10614
(defun codegen-progn (result forms env)codegen-progn290,12143
(defun codegen-multiple-value-call (result rest env)codegen-multiple-value-call302,12412
(defun codegen-multiple-value-prog1 (result rest env)codegen-multiple-value-prog1325,13419
(defun codegen-special-var-reference (var &optional env)codegen-special-var-reference350,14121
(defun codegen-lexical-var-reference (depth-index env)codegen-lexical-var-reference354,14287
(defun codegen-setq (result setq-pairs env)codegen-setq360,14528
(defun gather-lexical-variable-names (classified-symbols)gather-lexical-variable-names393,15716
(defun codegen-fill-let/let*-environment-premade-value-frame ( new-env lambda-list-handler exps parent-env evaluate-env)codegen-fill-let/let*-environment-premade-value-frame405,16118
(defun codegen-let/let* (operator-symbol result parts env)codegen-let/let*444,17923
(defun compile-if-cond (cond env)compile-if-cond510,20544
(defun codegen-if (result rest env)codegen-if521,20975
(defun extract-section (begin end)extract-section581,23723
(defun tagbody.enumerate-tag-blocks (code tagbody-env)tagbody.enumerate-tag-blocks590,23967
(defun codegen-tagbody (result rest env)codegen-tagbody604,24365
(defun codegen-go (result rest env)codegen-go645,26198
(defun codegen-block (result block-symbol body env)codegen-block665,26758
(defun codegen-return-from (result rest env)codegen-return-from690,27522
(defun codegen-fill-function-frame (function-env functions parent-env closure-env)codegen-fill-function-frame705,28112
(defun codegen-flet/labels (operator-symbol result rest env)codegen-flet/labels727,29279
(defun codegen-macrolet (result rest env)codegen-macrolet762,30781
(defun codegen-symbol-macrolet (result rest env)codegen-symbol-macrolet784,31447
(defun codegen-eval-when (result rest env)codegen-eval-when804,31892
(defun codegen-the/truly-the (result rest env)codegen-the/truly-the814,32165
(defun codegen-locally (result rest env)codegen-locally818,32250
(defun codegen-unwind-protect (result rest env)codegen-unwind-protect841,33047
(defun codegen-throw (result rest env)codegen-throw860,33589
(defun codegen-catch (result rest env)codegen-catch871,34011
(defun codegen-load-time-value (result rest env)codegen-load-time-value900,34957
(defun split-vars-declares-forms (parts)split-vars-declares-forms911,35281
(defparameter *nexti* 10000)*nexti*932,35820
(defun codegen-dbg-i32 (result rest env)codegen-dbg-i32933,35849
(defun codegen-special-operator (result head rest env)codegen-special-operator942,36073
(defun compile-macroexpand (form env)compile-macroexpand980,38028
(defun codegen-application (result form env)codegen-application986,38252
(defun augmented-special-operator-p (x)augmented-special-operator-p1005,38838
(defun codegen-atom (result obj env)codegen-atom1009,38954
(defun codegen (result form env)codegen1028,39838
(defun compile-thunk (name form env)compile-thunk1068,41124
(defun compile-interpreted-function (name func)compile-interpreted-function1089,41904
(defun compile* (name &optional definition env)compile*1105,42504
(defun compile-in-env (name &optional definition env)compile-in-env1132,43428
(defun compile (name &optional definition)compile1149,44238
(defun test-debug ()test-debug1153,44323
(defun disassemble (desig)disassemble1159,44399

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//setjmp-longjmp-code/exception-handling.lsp,869
(defmacro with-setjmp-longjmp ((env jmp-buf-var) body longjmp-body cleanup-body )with-setjmp-longjmp11,81
(defun try.attach-dispatch-blocks-to-clauses (clauses)try.attach-dispatch-blocks-to-clauses38,1112
(defun try.separate-clauses (clauses)try.separate-clauses46,1460
(defparameter *try.clause-stack* nil*try.clause-stack*63,2153
(defun try.flatten (structure)try.flatten66,2233
(defun try.identify-all-unique-clause-types (all-clause-types)try.identify-all-unique-clause-types71,2371
(defun try.add-landing-pad-clauses (landpad catch-clause-types)try.add-landing-pad-clauses83,2674
(defun try.one-dispatcher-and-handler (cur-dispatcher-blocktry.one-dispatcher-and-handler101,3181
(defmacro with-block-name-prefix ( &optional (prefix "") &rest body )with-block-name-prefix145,4617
(defmacro with-try (env code &rest catch-clauses)with-try153,4746

/Users/meister/Development/cando/brcl/src/lisp/kernel/cmp//setjmp-longjmp-code/llvm-ir.lsp,10220
(defun irc-single-step-callback (env)irc-single-step-callback10,154
(defun irc-attach-debugging-info-to-value-frame (af symbol-list-designator env)irc-attach-debugging-info-to-value-frame14,234
(defun handle-exit-scope (scope-info env)handle-exit-scope32,966
(defun irc-personality-function ()irc-personality-function39,1211
(defun irc-set-cleanup (landpad val)irc-set-cleanup42,1310
(defun irc-create-landing-pad (num-clauses &optional (name ""))irc-create-landing-pad46,1387
(defun irc-add-clause (landpad type)irc-add-clause49,1562
(defun irc-switch (go-value default-block num-cases)irc-switch52,1638
(defun irc-gep (str index &optional (name "gep"))irc-gep56,1770
(defun irc-exception-typeid** (name)irc-exception-typeid**60,1895
(defun irc-exception-typeid* (name)irc-exception-typeid*63,1972
(defun irc-preserve-exception-info (env lpad)irc-preserve-exception-info66,2047
(defmacro with-catch ((exn.slot exception-ptr env) &rest body)with-catch77,2591
(defun irc-save-exception-info (env lpad)irc-save-exception-info86,2896
(defparameter *use-unwind-resume* nil)*use-unwind-resume*93,3318
(defun irc-generate-resume-code (exn.slot ehselector.slot env)irc-generate-resume-code99,3362
(defun irc-rethrow (env)irc-rethrow118,4138
(defun irc-set-function-for-environment (env fn)irc-set-function-for-environment127,4336
(defun irc-get-function-for-environment (env)irc-get-function-for-environment130,4422
(defun irc-setup-cleanup-return-block (env)irc-setup-cleanup-return-block133,4504
(defun irc-get-cleanup-return-block (env)irc-get-cleanup-return-block137,4675
(defun irc-setup-cleanup-landing-pad-block (env)irc-setup-cleanup-landing-pad-block141,4766
(defun irc-get-cleanup-landing-pad-block (env)irc-get-cleanup-landing-pad-block147,5094
(defun irc-setup-exception-handler-cleanup-block (env)irc-setup-exception-handler-cleanup-block153,5197
(defun irc-get-exception-handler-cleanup-block (env)irc-get-exception-handler-cleanup-block159,5414
(defun irc-setup-exception-handler-resume-block (env)irc-setup-exception-handler-resume-block163,5527
(defun irc-get-exception-handler-resume-block (env)irc-get-exception-handler-resume-block167,5720
(defun irc-setup-terminate-landing-pad-block (env)irc-setup-terminate-landing-pad-block171,5831
(defun irc-get-terminate-landing-pad-block (env)irc-get-terminate-landing-pad-block175,6024
(defun irc-classify-variable (env var)irc-classify-variable182,6132
(defun irc-new-unbound-function-value-environment (old-env &key number-of-functions (label "function-frame"))irc-new-unbound-function-value-environment196,6525
(defun irc-new-function-value-environment (old-env &key functions (label "function-frame"))irc-new-function-value-environment205,6955
(defun irc-new-macrolet-environment (old-env)irc-new-macrolet-environment213,7314
(defun irc-new-symbol-macrolet-environment (old-env)irc-new-symbol-macrolet-environment219,7500
(defun irc-new-unbound-value-environment (old-env &key lambda-list-handlerirc-new-unbound-value-environment227,7709
(defun irc-new-value-environment (old-envirc-new-value-environment244,8505
(defun irc-new-unbound-value-environment-of-size (old-env &key number-of-arguments (label "value-frame"))irc-new-unbound-value-environment-of-size262,9114
(defun irc-new-value-environment-of-size (old-env &key number-of-arguments fill-runtime-form (label "env") )irc-new-value-environment-of-size274,9690
(defun irc-new-block-environment (old-env &key name)irc-new-block-environment292,10243
(defun irc-new-catch-environment (old-env)irc-new-catch-environment297,10369
(defun irc-new-unwind-protect-environment (old-env)irc-new-unwind-protect-environment301,10450
(defun irc-set-renv (env renv)irc-set-renv310,10556
(defun irc-renv (env)irc-renv313,10626
(defun irc-i32-current-line-number ()irc-i32-current-line-number324,10912
(defun irc-i32-current-column ()irc-i32-current-column327,10995
(defun irc-generate-terminate-code (env)irc-generate-terminate-code333,11071
(defun irc-generate-unwind-protect-landing-pad-code (env)irc-generate-unwind-protect-landing-pad-code344,11635
(defun irc-make-unwind-protect-environment (unwind-form parent-env)irc-make-unwind-protect-environment366,12166
(defun irc-unwind-unwind-protect-environment (env)irc-unwind-unwind-protect-environment372,12367
(defun irc-do-unwind-environment (env)irc-do-unwind-environment378,12584
(defun irc-unwind-environment (env)irc-unwind-environment389,12995
(defun irc-unwind-to-environment (begin-env end-env)irc-unwind-to-environment401,13253
(defun irc-cleanup-function-environment (env fntraceid)irc-cleanup-function-environment411,13534
(defun irc-function-cleanup-and-return (env fntraceid)irc-function-cleanup-and-return440,14356
(defun irc-rename-insert-block (name)irc-rename-insert-block481,15881
(defun irc-basic-block-create (name &optional function)irc-basic-block-create487,16122
(defun irc-get-insert-block ()irc-get-insert-block492,16343
(defun irc-append-basic-block (function theblock)irc-append-basic-block495,16418
(defun irc-set-insert-point (theblock)irc-set-insert-point499,16628
(defparameter *next-low-level-trace-index* 1000000001)*next-low-level-trace-index*506,16821
(defmacro irc-low-level-trace ()irc-low-level-trace507,16876
(defun irc-begin-landing-pad-block (theblock &optional (function *current-function*))irc-begin-landing-pad-block516,17196
(defun irc-begin-block (theblock &optional (function *current-function*))irc-begin-block523,17449
(defun irc-branch-to-and-begin-block (theblock)irc-branch-to-and-begin-block531,17707
(defun irc-icmp-slt (lhs rhs &optional (name ""))irc-icmp-slt535,17806
(defun irc-icmp-ne (lhs rhs &optional (name ""))irc-icmp-ne540,17914
(defun irc-icmp-eq (lhs rhs &optional (name ""))irc-icmp-eq543,18018
(defun irc-cond-br (icond true false &optional branchWeights)irc-cond-br547,18123
(defun irc-prev-inst-terminator-inst-p ()irc-prev-inst-terminator-inst-p550,18258
(defun irc-br (block)irc-br560,18503
(defun irc-branch-if-no-terminator-inst (block)irc-branch-if-no-terminator-inst568,18748
(defun irc-add (lhs rhs &optional (label ""))irc-add574,18892
(defun irc-load (ptr &optional (label ""))irc-load580,19001
(Defun irc-store (val result &optional (label ""))irc-store583,19105
(defun irc-phi (return-type num-reserved-values &optional (label "phi"))irc-phi588,19213
(defun irc-phi-add-incoming (phi-node value basic-block)irc-phi-add-incoming591,19362
(defun irc-unreachable ()irc-unreachable595,19475
(defun irc-trunc (value type &optional (label "trunc"))irc-trunc599,19548
(defun irc-function-create (lisp-function-name body env &key (linkage 'llvm-sys:internal-linkage))irc-function-create604,19663
(defparameter *exception-handler-cleanup-block* nil)*exception-handler-cleanup-block*656,22405
(defparameter *exception-clause-types-to-handle* nil)*exception-clause-types-to-handle*657,22458
(defmacro with-new-function ((fn fn-env &key (function-name "function") parent-env function-form (linkage ''llvm-sys:internal-linkage)) &rest body)with-new-function659,22513
(defun irc-push-cleanup (env cleanup-code)irc-push-cleanup693,24077
(defun irc-push-unwind (env unwind-code)irc-push-unwind699,24272
(defmacro with-alloca-insert-point (env irbuilderwith-alloca-insert-point705,24427
(defmacro with-irbuilder ((env irbuilder) &rest code)with-irbuilder727,25346
(defun irc-alloca-tmv (env &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-tmv737,25642
(defun irc-alloca-tsp (env &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-tsp744,25952
(defun irc-alloca-afsp (env &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-afsp750,26261
(defconstant +make-value-frames-at-alloca-time+ nil)+make-value-frames-at-alloca-time+756,26574
(defun irc-alloca-afsp-value-frame-of-size (env size &key (irbuilder *irbuilder-function-alloca*) (label ""))irc-alloca-afsp-value-frame-of-size758,26628
(defun irc-use-existing-value-frame (env result-af size)irc-use-existing-value-frame767,27090
(defun irc-alloca-i32-no-init (env &key (irbuilder *irbuilder-function-alloca*) (label "i32-"))irc-alloca-i32-no-init774,27374
(defun irc-alloca-i32 (env init-val &key (irbuilder *irbuilder-function-alloca*) (label "i32-"))irc-alloca-i32781,27643
(defun irc-alloca-i8* (env &key (irbuilder *irbuilder-function-alloca*) (label "i8*-"))irc-alloca-i8*788,27964
(defun irc-alloca-setjmp.buf (env &key (irbuilder *irbuilder-function-alloca*) (label "setjmp.buf"))irc-alloca-setjmp.buf794,28211
(defun irc-setjmp.buf-set-jump-address ( env setjmp.buf address)irc-setjmp.buf-set-jump-address799,28505
(defun irc-setjmp.buf-user0-set-i32 ( env setjmp.buf val)irc-setjmp.buf-user0-set-i32802,28634
(defun irc-setjmp.buf-user0-get-i32 ( env setjmp.buf)irc-setjmp.buf-user0-get-i32805,28768
(defun irc-setjmp.buf-user0-allocate-set-tmv ( env setjmp.buf tmv-val)irc-setjmp.buf-user0-allocate-set-tmv808,28875
(defun irc-setjmp.buf-user0-get-tmv ( env result setjmp.buf)irc-setjmp.buf-user0-get-tmv811,29016
(defun irc-setjmp.buf-user0-delete-tmv ( env setjmp.buf)irc-setjmp.buf-user0-delete-tmv814,29137
(defun irc-create-invoke (func args unwind-dest label)irc-create-invoke823,29256
(defun irc-create-call (func args label)irc-create-call847,30469
(defparameter *current-unwind-landing-pad-dest* nil)*current-unwind-landing-pad-dest*865,31164
(defmacro with-landing-pad (unwind-landing-pad-dest &rest body)with-landing-pad867,31218
(defun irc-invoke-or-call (env func args label)irc-invoke-or-call882,31723
(defun irc-call (env function-name &rest args &aux (label ""))irc-call896,32249
(defun irc-verify-function (fn &optional (continue t))irc-verify-function918,32925
(defun get-function-or-error (module name &optional first-argument)get-function-or-error938,33717
(defun irc-global-symbol (sym env)irc-global-symbol954,34582
(defun irc-global-setf-symbol (sym env)irc-global-setf-symbol960,34707
(defun irc-symbol-value-ref (env sym)irc-symbol-value-ref971,34915
(defun irc-environment-activation-frame (env)irc-environment-activation-frame977,35068
